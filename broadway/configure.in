dnl vim: ts=8 noexpandtab syntax=config
dnl Process this file with autoconf to produce a configure script.

AC_INIT([MFW Network Building Mediator Framework],[3.1],[])
AC_PREREQ(2.57)
AC_REVISION([[$Id: configure.in 20896 2011-09-14 03:33:05Z bhagn $]])

dnl This points out a unique filename that exists in the source directory.
dnl That way we can gracefully handle a bad '--srcdir' configure option.
dnl NOTE: this is a read-only check, configure WILL NOT modify this file.
AC_CONFIG_SRCDIR(.psource_only)

dnl This tells configure where to find its support scripts (config.guess, &c).
AC_CONFIG_AUX_DIR(buildsup)

dnl Handle the important stuff...
AC_ARG_WITH(sense-of-humor,
	AC_HELP_STRING(
		[--without-sense-of-humor],
		[Specify this if you have no sense of humor (default=with)]),
		[	if test "$withval" = "no"; then
			HUMOR="dork"
			fi
		],)

dnl Crap out if we're in the source directory.
AC_MSG_CHECKING([that you aren't trying to configure in the source directory])
if test "`cd $srcdir; /bin/pwd`" = "`/bin/pwd`"; then
	AC_MSG_ERROR([You must configure in a separate build directory])
fi
AC_MSG_RESULT([good!])

dnl Get around the relative directory weirdness (bugzilla #5478)...
abssrcdir=$(cd $srcdir; /bin/pwd)
srcdir=$abssrcdir

dnl We need to create $blddir/tools so we can drop in the generated
dnl penvironment.rc file
dnl NOTE:  The build process can no longer rely on penvironment.rc since it
dnl        generates it.  This is, no doubt, confusing.
AC_MSG_CHECKING([for a valid $(pwd)/tools directory])
echo $srcdir >.proot
touch $srcdir/.psource
mkdir -p tools
if test $? != 0; then
	AC_MSG_ERROR([Failed to create $(pwd)/tools])
fi
AC_MSG_RESULT([good!])

dnl Subtle joke, see how long before it gets noticed (*STM  5/8/2004*)...
AC_MSG_CHECKING([for working alcohol])
if test -f /usr/lib/champagne; then
	AC_MSG_RESULT([excellent!])
else
	AC_MSG_RESULT([no])
fi

dnl Prod the '--with-buildrc' option and set the appropriate toolchain.
AC_ARG_WITH(buildrc,
	AC_HELP_STRING([--with-buildrc],
		[Specify build type/toolchain (e.g. moe25)]),
		BUILDTYPE=$withval
		[test ! -f $srcdir/buildsup/${BUILDTYPE}.rc && AC_MSG_ERROR([
*** Unknown build type specified.
*** No ./buildsup/${BUILDTYPE}.rc file found for ${BUILDTYPE}.])],)

dnl Enforce the --with-buildrc option.
if test -z $BUILDTYPE; then
	AC_MSG_ERROR([No build type specified, please use the --with-buildrc= flag.])
fi

dnl These must be empty, the selected buildrc file will fill 'em in for us.
echo "NOTE:  Clearing environment variables.  The whole point behind this build"
echo "       system is to ensure reproducibility to the greatest degree"
echo "       possible."
ACLOCAL=""
AMDEP_FALSE="Not used in build."
AMDEP_TRUE="Not used in build."
AMTAR="Not used in build."
ANT_HOME=""
ARFLAGS="Not used in build."
AUTOCONF=""
AUTOHEADER=""
AUTOMAKE=""
AWK="Not used in build."
CC=""
CCDEPMODE="Not used in build."
CXX=""
CXXCPP="Not used in build."
CXXDEPMODE="Not used in build."
CYGPATH_W="Not used in build."
DEPDIR="Not used in build."
ENVENERGY_DT_HOME=""
INCLUDES=""
JAVACMD=""
JAVA_HOME=""
FLEX_HOME=""
MAKEINFO="Not used in build."
NORMAL_INSTALL="Not used in build."
NORMAL_UNINSTALL="Not used in build."
POST_INSTALL="Not used in build."
POST_UNINSTALL="Not used in build."
PRE_INSTALL="Not used in build."
PRE_UNINSTALL="Not used in build."
PYEXT=""
PYGCC=""
PYGCCFLAGS=""
PYGCC_BACKEND=""
PYTHON=""
PYTHON_EXEC_PREFIX=""
PYTHON_INC=""
PYTHON_LIB=""
PYTHON_PREFIX=""
PYTHON_VER=""
PYTHON_VIA_ENV=""
RANLIB=""
VERSION="Not used in build."
ac_AR=""
ac_LD=""
ac_M4=""
ac_NM=""
ac_PYTHON=""
ac_RANLIB=""
ac_STRIP=""
ac_ct_STRIP="Not used in build."
ac_toolchain_dir=""
am__fastdepCC_FALSE="Not used in build."
am__fastdepCC_TRUE="Not used in build."
am__fastdepCXX_FALSE="Not used in build."
am__fastdepCXX_TRUE="Not used in build."
am__include="Not used in build."
am__quote="Not used in build."
install_sh="Not used in build."

AC_MSG_RESULT([Build type is $BUILDTYPE, sourcing in appropriate file.])
source $srcdir/buildsup/${BUILDTYPE}.rc

dnl Make sure our required environment variables are set.
AC_MSG_CHECKING([for the presence of ENVENERGY_DT_HOME])
if test x$ENVENERGY_DT_HOME = "x"; then
	AC_MSG_ERROR([ENVENERGY_DT_HOME is not set])
fi
AC_MSG_RESULT($ENVENERGY_DT_HOME)

AC_ARG_ENABLE(build-nodedefs,
  AC_HELP_STRING([--enable-build-nodedefs],
                 [Toggles whether java and ant are available to build nodedefs (default=yes)]),
    [ac_cv_java_build="$enableval"], [ac_cv_java_build="yes"])
case "$ac_cv_java_build" in
	yes)
                AC_MSG_CHECKING([for the presence of JAVA_HOME])
                if test x$JAVA_HOME = "x"; then
                	AC_MSG_ERROR([JAVA_HOME is not set, --disable-build-nodedefs to use pre-built nodedefs])
                fi
                if test ! -d $JAVA_HOME; then
                	AC_MSG_ERROR([$JAVA_HOME does not exist, --disable-build-nodedefs to use pre-built nodedefs])
                fi
                AC_MSG_RESULT($JAVA_HOME)

                AC_MSG_CHECKING([for the presence of JAVACMD])
                if test x$JAVACMD = "x"; then
                	AC_MSG_ERROR([JAVACMD is not set, --disable-build-nodedefs to use pre-built nodedefs])
                fi
                if test ! -x $JAVACMD; then
                	AC_MSG_ERROR([$JAVACMD does not exist, --disable-build-nodedefs to use pre-built nodedefs])
                fi
                AC_MSG_RESULT($JAVACMD)

                AC_MSG_CHECKING([for the presence of ANT_HOME])
                if test x$ANT_HOME = "x"; then
                	AC_MSG_ERROR([ANT_HOME is not set, --disable-build-nodedefs to use pre-built nodedefs])
                fi
                if test ! -d $ANT_HOME; then
                	AC_MSG_ERROR([$ANT_HOME does not exist, --disable-build-nodedefs to use pre-built nodedefs])
                fi
                AC_MSG_RESULT($ANT_HOME)
		;;
	no)
                ANT_HOME="--disable-build-nodedefs"
                JAVACMD="--disable-build-nodedefs"
                JAVA_HOME="--disable-build-nodedefs"
		;;
	*)
		AC_MSG_ERROR([Unknown enable-build-nodedefs specification.])
	;;
esac

AC_ARG_ENABLE(build-swf,
  AC_HELP_STRING([--enable-build-swf],
                 [Toggles whether flex is available to build swfs (default=yes)]),
    [ac_cv_swf_build="$enableval"], [ac_cv_swf_build="yes"])
case "$ac_cv_swf_build" in
    yes)
                AC_MSG_CHECKING([for the presence of FLEX_HOME])
                if test x$FLEX_HOME = "x"; then
                        AC_MSG_ERROR([FLEX_HOME is not set, --disable-build-swf to use pre-built SWFs])
                fi
                if test ! -d $FLEX_HOME; then
                        AC_MSG_ERROR([$FLEX_HOME does not exist, --disable-build-swf to use pre-built SWFs])
                fi
                AC_MSG_RESULT($FLEX_HOME)
        ;;
    no)
                FLEX_HOME="--disable-build-swf"
        ;;
    *)
        AC_MSG_ERROR([Unknown enable-build-swf specification.])
    ;;
esac

dnl Automake junque (we're not using automake at the moment, just hooks for now).
dnl AM_INIT_AUTOMAKE
AC_PROG_MAKE_SET

dnl Prod the '--enable-debug' option to see if we are asking for a debug build.
AC_ARG_ENABLE(debug,
  AC_HELP_STRING([--enable-debug],
                 [Toggles whether to do a debug build (default=yes)]),
    [ac_cv_debug_build="$enableval"], [ac_cv_debug_build="yes"])
case "$ac_cv_debug_build" in
	yes)
		CFLAGS="-fPIC -g" # -O2" # NO -O2 for debugging!!!
		CXXFLAGS="-g" # -O2"
		PYGCCFLAGS="-O0"
		PYEXT="pyc"
		;;

	no)
		CFLAGS="-fPIC -O2"
		CXXFLAGS="-O2"
		PYGCCFLAGS="-O2"
		PYEXT="pyo"
		;;

	*)
		AC_MSG_ERROR([Unknown debuggering specification.])
	;;
esac

dnl Make sure we have a shell.
AC_CHECK_PROG(SHELL,bash,,/bin,,)
if test "x$ac_cv_prog_SHELL" = "x"; then
	AC_MSG_ERROR([Cannot locate /bin/bash])
fi

dnl Make sure the compilers work.
AC_PROG_CC
AC_PROG_CXX

if test -z $HUMOR; then
	AC_CHECK_LIB(Fridge,mass_quantities_of_heineken)
	AC_CHECK_LIB(Fridge,mass_quantities_of_any_beer,,[
		echo "FAILURE: You have no beer in your fridge, please rectify this immediately!"
	])
fi

dnl Checks for programs
AC_PROG_INSTALL

AC_CHECK_PROG(AR,$ac_AR,[$ac_toolchain_dir/$ac_AR],,$ac_toolchain_dir,)
if test "x$ac_cv_prog_AR" = "x"; then
	AC_MSG_ERROR([Cannot locate $ac_AR])
fi

AC_CHECK_PROG(LD,$ac_LD,[$ac_toolchain_dir/$ac_LD],,$ac_toolchain_dir,)
if test "x$ac_cv_prog_LD" = "x"; then
	AC_MSG_ERROR([Cannot locate $ac_LD])
fi

dnl This is a work-around in a bad path in '/opt/envenergy/devtools/2.0/bin/autom4te'.
dnl Said file calls out /opt/envenergy/devtools/m4, which don't exist...
dnl Dump this wart when we deprecate devtools 2.0
AC_CHECK_PROG(M4,$ac_M4,[$ENVENERGY_DT_HOME/bin/$ac_M4],,$ENVENERGY_DT_HOME/bin,)
if test "x$ac_cv_prog_M4" = "x"; then
	AC_MSG_ERROR([Cannot locate $ac_M4])
fi

AC_CHECK_PROG(NM,$ac_NM,[$ac_toolchain_dir/$ac_NM],,$ac_toolchain_dir,)
if test "x$ac_cv_prog_NM" = "x"; then
	AC_MSG_ERROR([Cannot locate $ac_NM])
fi

AC_CHECK_PROG(RANLIB,$ac_RANLIB,[$ac_toolchain_dir/$ac_RANLIB],,$ac_toolchain_dir,)
if test "x$ac_cv_prog_RANLIB" = "x"; then
	AC_MSG_ERROR([Cannot locate $ac_RANLIB])
fi

AC_CHECK_PROG(STRIP,$ac_STRIP,[$ac_toolchain_dir/$ac_STRIP],,$ac_toolchain_dir,)
if test "x$ac_cv_prog_STRIP" = "x"; then
	AC_MSG_ERROR([Cannot locate $ac_STRIP])
fi

dnl This check is probably meaningless...
AC_CHECK_PROG(MAKE,make,make,,,)
if test "x$ac_cv_prog_MAKE" = "x"; then
	AC_MSG_ERROR([Cannot locate make])
fi

dnl Set the BUILD_DIR
BUILD_DIR="$(pwd)"

dnl Remove old install scripts.  Moved and removed install scripts can
dnl cause bad things.  Nuke'm all.
AC_MSG_RESULT([Removing old install scripts...])
find $(pwd) -name "*.install.py[co]" -exec rm -f \{\} \;

dnl System macros, mostly when using a cross-compiler.
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AC_ISC_POSIX

dnl Test compiler's capabilities.
AM_PROG_CC_C_O

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_STAT
AC_HEADER_TIME
AC_CHECK_HEADERS([sys/io.h])

dnl Let the makefile know what our build host is.
AC_DEFINE_UNQUOTED(MAKE_HOST,"$host",[Build host information.])
MAKE_HOST="$host"

dnl We use this in the top-level makefile so our builds can be a little smarter
CONFIG_ARGS="$ac_configure_args"

AC_MSG_CHECKING([for libsmi 0.4.8 install prefix])
LIBSMI_PREFIX=""
for pfx in /opt/riptide/devtools/libsmi-0.4.8 /usr/local /usr
do if test -d $pfx
   then if test -x $pfx/bin/smidump
        then ver=$(LD_LIBRARY_PATH=$pfx/lib \
                   SMIPATH=$pfx/share/mibs/ietf \
                   $pfx/bin/smidump --version)
             if test "$ver" == "smidump 0.4.8"
             then LIBSMI_PREFIX=$pfx
                  break
             fi
        fi
   fi
done
if test -z "$LIBSMI_PREFIX"
then AC_MSG_ERROR([
  vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
  Build requires installing devtools libsmi-0.4.8.  To install devtools
  libsmi-0.4.8, download: 
    <http://enki.cisco.com/riptide-eng/devtools-moe25/libsmi-0.4.8-devtools.tgz>
  and untar it as SUPER USER in the ROOT (/) directory.
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
])
else AC_MSG_RESULT([$LIBSMI_PREFIX])
fi

if test -z $HUMOR; then
	AC_CHECK_LIB(Kenny,life_signs,, [
		echo "    Oh my god, they killed Kenny!  You bastards!"
	])
fi

dnl Really a list of non-Makefiles created from .in files.
GENERATED_FILES="tools/python-mpx \
		 tools/penvironment.rc"

dnl Copy these over.  They no longer require .in files, so they could probably
dnl go into the make system cleanly...
BUILD_HELPER="$BUILD_DIR/build_helper.py"
PYGCC="$BUILD_DIR/buildsup/pygcc"
PYGCC_BACKEND="$BUILD_DIR/buildsup/pygcc_backend.py"

test -d "$BUILD_DIR/buildsup" || mkdir -p "$BUILD_DIR/buildsup"
cp -fv "${abssrcdir}/build_helper.py" "${BUILD_HELPER}"
cp -fv "${abssrcdir}/buildsup/pygcc" "${PYGCC}"
cp -fv "${abssrcdir}/buildsup/pygcc_backend.py" "${PYGCC_BACKEND}"

dnl These used to be generated.  Now they are simple scripts that use
dnl python-mpx.  This probably happen in the makefile now...
cp -fv "${abssrcdir}/install" "$BUILD_DIR/install"
cp -fv "${abssrcdir}/pextract" "$BUILD_DIR/pextract"
cp -fv "${abssrcdir}/tools/pyc_loader" "$BUILD_DIR/tools/pyc_loader"
dnl cp -fv "${abssrcdir}/tools/srna/UpdateSrnaTop" "$BUILD_DIR/tools/srna/UpdateSrnaTop"
dnl cp -fv "${abssrcdir}/tools/srna/dnr" "$BUILD_DIR/tools/srna/dnr"
dnl cp -fv "${abssrcdir}/tools/srna/srna_openssl.cnf" "$BUILD_DIR/tools/srna/srna_openssl.cnf"
dnl cp -fv "${abssrcdir}/tools/srna/srna_openssl_top.cnf" "$BUILD_DIR/tools/srna/srna_openssl_top.cnf"

if test "`cd $srcdir; /bin/pwd`" = "`/bin/pwd`"; then
	AC_MSG_ERROR([You must configure in a separate build directory])
fi

dnl Stuff the following into the generated Makefiles

AC_SUBST(ACLOCAL)
AC_SUBST(AMDEP_FALSE)
AC_SUBST(AMDEP_TRUE)
AC_SUBST(AMTAR)
AC_SUBST(ANT_HOME)
AC_SUBST(AR)
AC_SUBST(ARFLAGS)
AC_SUBST(AUTOCONF)
AC_SUBST(AUTOHEADER)
AC_SUBST(AUTOMAKE)
AC_SUBST(AWK)
AC_SUBST(BUILDTYPE)
AC_SUBST(BUILD_DIR)
AC_SUBST(BUILD_HELPER)
AC_SUBST(CCDEPMODE)
AC_SUBST(CFLAGS)
AC_SUBST(CONFIG_ARGS)
AC_SUBST(CXXCPP)
AC_SUBST(CXXDEPMODE)
AC_SUBST(CYGPATH_W)
AC_SUBST(DEPDIR)
AC_SUBST(ENVENERGY_DT_HOME)
AC_SUBST(GENERATED_FILES)
AC_SUBST(INCLUDES)
AC_SUBST(INSTALL_STRIP_PROGRAM)
AC_SUBST(JAVACMD)
AC_SUBST(JAVA_HOME)
AC_SUBST(FLEX_HOME)
AC_SUBST(LD)
AC_SUBST(LIBSMI_PREFIX)
AC_SUBST(LOCAL_CFLAGS)
AC_SUBST(LOCAL_DEFS)
AC_SUBST(LOCAL_LDFLAGS)
AC_SUBST(M4)
AC_SUBST(MAKE)
AC_SUBST(MAKEINFO)
AC_SUBST(MAKE_HOST)
AC_SUBST(NM)
AC_SUBST(PROCESSOR_FAMILY)
AC_SUBST(PYEXT)
AC_SUBST(PYGCC)
AC_SUBST(PYGCCFLAGS)
AC_SUBST(PYGCC_BACKEND)
AC_SUBST(PYTHON)
AC_SUBST(PYTHON_EXEC_PREFIX)
AC_SUBST(PYTHON_INC)
AC_SUBST(PYTHON_LIB)
AC_SUBST(PYTHON_MPX_PRELOAD)
AC_SUBST(PYTHON_PREFIX)
AC_SUBST(PYTHON_VER)
AC_SUBST(RANLIB)
AC_SUBST(SHELL)
AC_SUBST(ac_ct_STRIP)
AC_SUBST(am__fastdepCC_FALSE)
AC_SUBST(am__fastdepCC_TRUE)
AC_SUBST(am__fastdepCXX_FALSE)
AC_SUBST(am__fastdepCXX_TRUE)
AC_SUBST(am__include)
AC_SUBST(am__quote)
AC_SUBST(install_sh)

dnl Granularizing the build heirarchy a bit...
dnl .
dnl Please do not move or delete the BBTOOL tags.  These tags are required
dnl by the broadway build support scripts, which use these tags to insert
dnl and remove directories

dnl BBTOOL: Dallas
ac_DALLAS_PKG="mpx/avr/Makefile \
	mpx/avr/lib/Makefile \
	mpx/dallas/Makefile \
	mpx/dallas/lib/Makefile \
	mpx/dallas/node/Makefile"

dnl BBTOOL: OMEGA
ac_RZ_OMEGA_APP="opt/rz/Makefile \
	opt/rz/omega/Makefile \
	opt/rz/omega/config/Makefile \
	opt/rz/omega/html/Makefile \
	opt/rz/omega/lib/Makefile \
    opt/rz/omega/lib/energywise/Makefile"

dnl BBTOOL: Buildsup
ac_BUILDSUP=${GENERATED_FILES}

dnl This is THE master list of Makefiles.  From this list we will also generate
dnl a list of subdirectories in each build directory (".subdirs") for the top-
dnl level Makefile to use.  This eliminates the redundancies in having to
dnl maintain two almost completely similar lists in two separate files...
dnl .
dnl Order is important here.  With the exception of the "tools" directory
dnl (which MUST be the first directory built), directories will be visited
dnl in the order that they're listed here.  Caveat Emptor.
dnl .
dnl @note I (mevans) believe that the above comment about order is not true
dnl       anymore.
dnl .
dnl BBTOOL: Master_List
ac_MAKEFILES="Makefile \
	Makefile.broadway \
	Makefile.broadway-core \
	Constants.make
	cfg/Makefile \
	doc/Makefile \
	doc/stylesheets/Makefile \
	doc/stylesheets/rst2html/Makefile \
	doc/templates/Makefile \
	tools/Makefile \
	tools/srna/Makefile \
	html/Makefile \
	html/dojoroot/Makefile \
	html/dojoroot/dojo/Makefile \
	html/dojoroot/dijit/Makefile \
	html/dojoroot/dijit/Makefile \
	html/dojoroot/dojox/Makefile \
	html/dojoroot/dojoconfig/Makefile \
        flex-modules/Makefile \
	moab/Makefile \
	moab/config_service/Makefile \
	moab/lib/Makefile \
	moab/linux/Makefile \
	moab/linux/bin/Makefile \
	moab/linux/lib/Makefile \
	moab/linux/templates/Makefile \
	moab/user/Makefile \
	mpx/Makefile \
	mpx/_python/Makefile \
	mpx/_python/_sandbox/Makefile \
	mpx/cpc/Makefile \
	mpx/cpc/lib/Makefile \
	mpx/cpc/node/Makefile \
	mpx/componentry/Makefile \
	mpx/componentry/backports/Makefile \
	mpx/componentry/presentation/Makefile \
	mpx/componentry/security/Makefile \
	mpx/install/Makefile \
	mpx/ion/Makefile \
	mpx/ion/abb/Makefile \
	mpx/ion/abb/alphaplus/Makefile \
	mpx/ion/adam/Makefile \
	mpx/ion/aerocomm/Makefile \
	mpx/ion/adura/Makefile \
	mpx/ion/bacnet/Makefile \
	mpx/ion/capstone/Makefile \
	mpx/ion/capstone/micro_turbine/Makefile \
	mpx/ion/caterpillar/Makefile \
	mpx/ion/cpc/Makefile \
	mpx/ion/dallas/Makefile \
	mpx/ion/delphi/Makefile \
	mpx/ion/host/Makefile \
	mpx/ion/host/arm/Makefile \
	mpx/ion/host/avr/Makefile \
	mpx/ion/host/eth/Makefile \
	mpx/ion/host/usb/Makefile \
	mpx/ion/host/modem/Makefile \
	mpx/ion/host/__port/Makefile \
	mpx/ion/jace/Makefile \
	mpx/ion/modbus/abb/Makefile \
	mpx/ion/modbus/dg50/Makefile \
	mpx/ion/modbus/Makefile \
	mpx/ion/modbus/dl06/Makefile \
	mpx/ion/modbus/server/Makefile \
	mpx/ion/modbus/stm/Makefile \
	mpx/ion/modbus/veris/Makefile \
	mpx/ion/modbus/woodward/Makefile \
	mpx/ion/omni/Makefile\
	mpx/ion/pointsix/Makefile \
	mpx/ion/router/Makefile \
	mpx/ion/rz/Makefile \
	mpx/ion/sensorsoft/Makefile \
	mpx/ion/soap/Makefile \
	mpx/ion/siemens/Makefile \
	mpx/ion/siemens/quad4/Makefile \
	mpx/ion/tcs/Makefile \
	mpx/ion/usap/Makefile \
	mpx/ion/wxt/Makefile \
	mpx/ion/xbow/Makefile \
	mpx/lib/Makefile \
	mpx/lib/log/Makefile \
	mpx/lib/aerocomm/Makefile \
	mpx/lib/adura/Makefile \
	mpx/lib/bacnet/Makefile \
	mpx/lib/caterpillar/Makefile \
	mpx/lib/configure/Makefile \
	mpx/lib/daemon/Makefile \
	mpx/lib/debug/Makefile \
	mpx/lib/driver/Makefile \
	mpx/lib/entity/Makefile \
	mpx/lib/eventdispatch/Makefile \
	mpx/lib/exceptions/Makefile \
	mpx/lib/genericdriver/Makefile \
	mpx/lib/modbus/Makefile \
	mpx/lib/msglog/Makefile \
	mpx/lib/neode/Makefile \
	mpx/lib/neode/dom/Makefile \
	mpx/lib/neode/html/Makefile \
	mpx/lib/neode/web/Makefile \
	mpx/lib/neode/web/invoker/Makefile \
	mpx/lib/network/Makefile \
	mpx/lib/node/Makefile \
	mpx/lib/omni/Makefile \
    mpx/lib/persistence/Makefile \
    mpx/lib/proxy/Makefile \
	mpx/lib/router/Makefile \
	mpx/lib/rz/Makefile \
	mpx/lib/security/Makefile \
	mpx/lib/simulator/Makefile \
	mpx/lib/snmp/Makefile \
	mpx/lib/snmp/mibs/Makefile \
	mpx/lib/soap/Makefile \
	mpx/lib/scheduler/Makefile \
	mpx/lib/scheduler/notifier/Makefile \
	mpx/lib/tcs/Makefile \
	mpx/lib/translator/Makefile \
	mpx/lib/uuid/Makefile \
	mpx/lib/xbow/Makefile \
	mpx/lib/xmlrpc/Makefile \
	mpx/lib/xmlrpclib/Makefile \
	mpx/precor/Makefile \
	mpx/precor/node/Makefile \
	mpx/lib/http/Makefile \
	mpx/service/Makefile \
	mpx/service/alarms/Makefile \
	mpx/service/alarms2/Makefile \
	mpx/service/alarms2/export/Makefile \
	mpx/service/alarms2/export/xhtml/Makefile \
	mpx/service/alarms2/export/xhtml/configuration/Makefile \
	mpx/service/alarms2/presentation/Makefile \
	mpx/service/alarms2/presentation/syndication/Makefile \
	mpx/service/alarms2/presentation/syndication/atom/Makefile \
	mpx/service/alarms2/presentation/syndication/http/Makefile \
	mpx/service/alarms2/presentation/syndication/rss2/Makefile \
	mpx/service/alarms2/presentation/xhtml/Makefile \
	mpx/service/alarms2/presentation/xhtml/configuration/Makefile \
	mpx/service/alarms2/trigger/Makefile \
	mpx/service/alarms2/trigger/xhtml/Makefile \
	mpx/service/alarms2/trigger/xhtml/configuration/Makefile \
	mpx/service/cloud/Makefile \
	mpx/service/cloud/xhtml/Makefile \
	mpx/service/cloud/xhtml/configuration/Makefile \
	mpx/service/c_process_stats/Makefile \
	mpx/service/configuration/Makefile \
	mpx/service/control/Makefile \
	mpx/service/data/Makefile \
    mpx/service/diagnostics/Makefile \
	mpx/service/data/ftptransport/Makefile \
	mpx/service/data/ebidenergy/Makefile \
	mpx/service/data/ei/Makefile \
	mpx/service/data/enernoc/Makefile \
	mpx/service/data/enernoc_v2/Makefile \
	mpx/service/data/enerwise/Makefile \
	mpx/service/data/fsg/Makefile \
	mpx/service/demo/Makefile \
	mpx/service/device_manager/Makefile \
	mpx/service/dras/Makefile \
	mpx/service/driver/Makefile \
	mpx/service/equipment/Makefile \
	mpx/service/equipment/data/Makefile \
	mpx/service/equipment/data/formatters/Makefile \
	mpx/service/equipment/data/formatters/utilities/Makefile \
	mpx/service/equipment/data/transporters/Makefile \
    mpx/service/equipment/fdd/Makefile \
    mpx/service/equipment/utilities/Makefile \
    mpx/service/gsp/Makefile \
	mpx/service/hal/Makefile \
	mpx/service/hal/alarms/Makefile \
	mpx/service/hal/schedules/Makefile \
    mpx/service/interactive/Makefile \
	mpx/service/logger/Makefile \
	mpx/service/logger/tcs/Makefile \
	mpx/service/network/Makefile \
	mpx/service/network/async/Makefile \
	mpx/service/network/async/connection/Makefile \
	mpx/service/network/async/connection/trigger/Makefile \
	mpx/service/network/async/message/Makefile \
	mpx/service/network/async/process/Makefile \
	mpx/service/network/bacnet/Makefile \
    mpx/service/network/constellation/Makefile \
    mpx/service/network/energyconnect/Makefile \
	mpx/service/network/http/Makefile \
	mpx/service/network/http/client/Makefile \
	mpx/service/network/http/handlers/Makefile \
    mpx/service/network/http/responders/Makefile \
	mpx/service/network/https/Makefile \
    mpx/service/network/openadr/Makefile \
    mpx/service/network/soap/Makefile \
	mpx/service/network/snmp/Makefile \
	mpx/service/network/utilities/Makefile \
    mpx/service/network/xhtml/Makefile \
    mpx/service/network/xhtml/form/Makefile \
	mpx/service/override/Makefile \
	mpx/service/query/Makefile \
	mpx/service/router/Makefile \
	mpx/service/security/Makefile \
	mpx/service/security/policy/Makefile \
	mpx/service/security/role/Makefile \
	mpx/service/security/user/Makefile \
	mpx/service/session/Makefile \
	mpx/service/status/Makefile \
	mpx/service/subscription_manager/Makefile \
	mpx/service/time/Makefile \
	mpx/service/user_manager/Makefile \
	mpx/service/schedule/Makefile \
	mpx/service/trendmanager/Makefile \
	mpx/service/virtuals/Makefile \
	mpx/system/Makefile \
	mpx/upgrade/Makefile \
	mpx/upgrade/log/Makefile \
	mpx/upgrade/persistent/Makefile \
	mpx/www/Makefile \
	mpx/www/w3c/Makefile \
	mpx/www/w3c/dom/Makefile \
	mpx/www/w3c/syndication/Makefile \
	mpx/www/w3c/syndication/atom/Makefile \
	mpx/www/w3c/syndication/rss1/Makefile \
	mpx/www/w3c/syndication/rss2/Makefile \
	mpx/www/w3c/xhtml/Makefile \
	mpx/www/w3c/xml/Makefile \
	nodedef/Makefile \
	opt/Makefile \
	opt/mfw/Makefile \
	opt/mfw/production/Makefile \
	opt/mfw/nbm/Makefile \
	opt/mfw/nbm-devtest-vm/Makefile \
	opt/mfw/nbmmgr/Makefile \
	sdk/Makefile \
	${ac_BUILDSUP} \
	${ac_RZ_OMEGA_APP} \
"

dnl Generate the list of subdirectories for the main Makefile
AC_MSG_RESULT(
	[Automagically generating subdirectory list for main Makefile...]
	)
rm -f .subdirs* 1>/dev/null
echo "# Automatically generated by configure.  DO NOT EDIT!" >>.subdirs-sorted

dnl We always want "tools" to be the first directory built...
echo "tools" >>.subdirs-sorted
echo "buildsup" >>.subdirs-sorted
for makefile in ${ac_MAKEFILES}; do
	directory=`dirname ${makefile}`
	echo "${directory}" >>.subdirs
done
sort -u .subdirs |
     grep -v '^.$' | grep -v '^tools$' | grep -v '^buildsup$' >>.subdirs-sorted
mv -f .subdirs-sorted .subdirs

dnl Files specified in ac_MAKEFILES will now be generated...
dnl .
dnl The "[exec 1>/dev/null 6>&1]" forces all non-STDERR output to be
dnl redirected to /dev/null (duh).  This cuts down on the amount of noise
dnl generated and helps speed up the generation of the 170+ Makefiles.
AC_CONFIG_FILES([${ac_MAKEFILES}],,[exec 1>/dev/null 6>&1])

dnl 'AC_CONFIG_HEADERS' creates config.h from config.h.in (which autoheaders
dnl created.)
echo -n "Creating config.h: ... "
AC_CONFIG_HEADERS([config.h])
echo "done."

dnl  'AC_OUTPUT' forces the (re)generation of Makefiles, et al.
echo -n "Configure is lying: "
AC_OUTPUT

dnl Local stuff here...
AC_MSG_RESULT([Setting $BUILD_HELPER execute bits...])
chmod a+x $BUILD_HELPER

AC_MSG_RESULT([Setting $PYGCC execute bits...])
chmod a+x $PYGCC

AC_MSG_RESULT([Setting $PYGCC_BACKEND execute bits...])
chmod a+x $PYGCC_BACKEND

AC_MSG_RESULT([Setting pextract execute bits...])
chmod a+x pextract

AC_MSG_RESULT([Setting install execute bits...])
chmod a+x install

AC_MSG_RESULT([Setting tools/python-mpx execute bits...])
chmod a+x tools/python-mpx

AC_MSG_RESULT([Setting tools/pyc_loader execute bits...])
chmod a+x tools/pyc_loader

dnl AC_MSG_RESULT([Setting tools/srna/UpdateSrnaTop execute bits...])
dnl chmod a+x tools/srna/UpdateSrnaTop

dnl -- EOF ------------------------------------------------------------------
