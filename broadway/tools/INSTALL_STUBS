#!/bin/bash

SOURCE_DIR=$(cd $(dirname "$0"); pwd)

BIN="$(echo ~)/bin"
BIN_PROFILE="${BIN}/.profile"
BASH_PROFILE="$(echo ~)/.bash_profile"
# Ubuntu (and possibly others) uses .profile, not .bash_profile:
[ -f "${BASH_PROFILE}" ] || BASH_PROFILE="$(echo ~)/.profile"
BASH_PROFILE_TMP="${BASH_PROFILE}.$$"

error_exit () {
    echo "$1"
    exit 1
}

progress () {
    echo "$@"
}

failure_is_not_an_option () {
    echo "    Executing:  $@"
    "$@" || error_exit "$1 returned an error, INSTALL FAILED"
    return 0
}

create_directories () {
    for d in $BIN
    do
	if [ -d $d ]
	then
	    progress "$d directory exists, good."
	else
	    progress "Creating $d ..."
	    failure_is_not_an_option mkdir $d
	fi
    done
    return 0
}

COMMANDS="\
ac256plus_terminal
configure
console
cvstool
exercise
fsize
kill-fw
makecert 
monitor
make_hldb
mpx_diag
mpxadmin
msglog_viewer
messages
penv
pfileinfo
pi
ppp
proot
psource
python-mpx
python-mpx-executable
python-mpx-version
run_test_modules
superexec
test_from_cvs
unittester
generate_escrow
version
"

create_dev_stubs () {
    local dev_stub=$BIN/dev_stub
    progress "Copying dev_stub to $BIN ..."
    failure_is_not_an_option cp -f ./dev_stub $dev_stub
    failure_is_not_an_option chmod a+x $dev_stub
    # progress "Copying cron_run_tests ..."
    # failure_is_not_an_option cp -f ./cron_run_tests $BIN/cron_run_tests
    # failure_is_not_an_option chmod a+x $BIN/cron_run_tests
    progress "Creating command stubs ..."
    failure_is_not_an_option chmod a+x $dev_stub
    failure_is_not_an_option cd $BIN
    for stub in $COMMANDS
    do
	test -f $stub && failure_is_not_an_option rm -f $stub
	failure_is_not_an_option ln -s ./dev_stub $stub
    done
}

create_bin_profile () {
    progress "Creating $BIN_PROFILE ..."
    (
     echo "# DO NOT EDIT - Generated by $0." \
	 >$BIN_PROFILE &&
     echo '# Only add ~/bin to the PATH if it is not already present.' \
	 >>$BIN_PROFILE &&
     echo 'echo $PATH | grep -q ~/bin || PATH=$PATH:~/bin' >>$BIN_PROFILE) || \
	error_exit "Could not create $BIN_PROFILE, install failed."
    # Add profile.d (or maybe *.sh install can handle that).
    pushd $SOURCE_DIR >/dev/null 2>&1
    bash ./broadway.sh install
    bash ./term.sh install
    popd >/dev/null 2>&1
}

SOURCE_BIN_PROFILE="\
# INSTALL_STUBS:  Keep the INSTALL_STUBS comment with the following command
#                 or INSTALL_STUBS will hate you.
. $BIN_PROFILE # INSTALL_STUBS"

update_bash_profile () {
    progress "Updating $BASH_PROFILE ..."
    (
     grep -v INSTALL_STUBS $BASH_PROFILE >$BASH_PROFILE_TMP &&
     echo "$SOURCE_BIN_PROFILE" >> $BASH_PROFILE_TMP &&
     mv -f $BASH_PROFILE_TMP $BASH_PROFILE
    ) || (
     rm -f $BASH_PROFILE_TMP;
     echo "\
Warning:  Could not update $BASH_PROFILE, you will need to
manually edit your shell's profile."
    exit 0
    )
    echo "
Congratulations, you've successfully installed the amazing Broadway
developer's stubs!  Next time you log in ~/bin will be in your path.  To
ensure ~/bin is in your path before re-logging in, run the following
command:

     . ~/bin/.profile

Enjoy!"
}

create_directories
create_dev_stubs
create_bin_profile
update_bash_profile
