<%    
# Copyright (c) 2005 Richards-Zeta
# $Name: mediator_3_1_2_branch $
# $Id: save.psp 20479 2011-05-19 14:07:22Z bisarkar $
import os
import sys
import errno
import shutil
import commands
from mpx.lib.http import MultipartCollector
from mpx import properties

if request.get_protocol() == 'http':
    root = properties.HTTP_ROOT
else:
    root = properties.HTTPS_ROOT

from mpx.lib import rzutils
        
m = MultipartCollector(request)
imagesdir = 'images'
sitedefsdir = 'sitedefs'

def mkdirs(newdir, mode=0777):
    try:
        oldmask = os.umask(0)
        try:
            os.makedirs(newdir, mode)
        except OSError, err:
            if err.errno != errno.EEXIST or not os.path.isdir(newdir):
                raise
    finally:
        os.umask(oldmask)

mkdirs(os.path.join(root,sitedefsdir), 0755)

if m.has_key('sitename'):
    newsitename = m['sitename'].value
    newsitename = newsitename.replace(' ','_')
    newsitename = newsitename.replace("'","")
    newsitename = newsitename.replace('"','')
else:
    psp.write('Form did not have correct sitename element<br>')
    exit()

if m.has_key('fontcolor'):
    fontcolor = m['fontcolor'].value
else:
    psp.write('Form did not have correct fontcolor element<br>')
    exit()

if m.has_key('fontfamily'):
    fontfamily = m['fontfamily'].value
    fontfamily = fontfamily.replace('"',"'")
    fontfamily = fontfamily.replace("'","\'")
else:
    psp.write('Form did not have correct fontfamily element<br>')
    exit()

if m.has_key('backgroundcolor'):
    bgcolor = m['backgroundcolor'].value
else:
    psp.write('Form did not have correct backgroundcolor element<br>')
    exit()

if m.has_key('wddxinfo'):
    fn = os.path.join(root,sitedefsdir,newsitename + '.wdx')
    try:
        tmpFile = open(fn,'w')
        tmpFile.write(m['wddxinfo'].value)
        tmpFile.close()
    except Exception,e:
        psp.write('Error: %s<br>' % e)
        exit()
else:
    psp.write('Form did not have correct wddxinfo element<br>')
    exit()

if m.has_key('logoupload'):
    fn = m['logo'].value
    fullfn = os.path.join(root,fn[1:])        
    if m['logoupload'].file:           
        try:
            fileitem = m['logoupload']
            if len(fileitem.value) > 0:
                tmpFile = open(fullfn,'w')
                tmpFile.write(fileitem.value)
                tmpFile.close()
        except Exception,e:
            psp.write('Error: %s<br>' % e)
            exit()
    else:
        psp.write('No Logo Upload File<br>')     #
        exit()
else:
    psp.write('Form did not have correct file upload element<br>')
    exit()
    
if m.has_key('bannerupload'):
    fn = m['banner'].value
    fullfn = os.path.join(root,fn[1:])        
    if m['bannerupload'].file:           
        try:
            fileitem = m['bannerupload']
            if len(fileitem.value) > 0:
                tmpFile = open(fullfn,'w')
                tmpFile.write(fileitem.value)
                tmpFile.close()
        except Exception,e:
            psp.write('Error: %s<br>' % e)
            exit()
else:
    psp.write('Form did not have correct banner upload element<br>')
    exit()

if m.has_key('mainframeupload'):
    fn = m['mainframe'].value
    if fn != '':
        fullfn = os.path.join(root,fn[1:])        
        if m['mainframeupload'].file:           
            try:
                fileitem = m['mainframeupload']
                if len(fileitem.value) > 0:
                    tmpFile = open(fullfn,'w')
                    tmpFile.write(fileitem.value)
                    tmpFile.close()
                    rzutils.wefs_cache(fullfn)
            except Exception,e:
                psp.write('Error: %s<br>' % e)
                exit()
else:
    psp.write('Form did not have correct mainframe upload element<br>')
    exit()

def installSiteBuilderFile(fromfile, tofile):
    fullfromfile = os.path.normpath(os.path.join(root, fromfile))
    fulltofile = os.path.normpath(os.path.join(root, tofile))

    if not os.path.exists(fullfromfile):
        response.send_error(404, 'Not Found')
    else:
        if not os.path.exists(fulltofile):
            shutil.copy2(fullfromfile, fulltofile)

installSiteBuilderFile('omega/sitebuilder/home_main.html', 'home_main.html')
 
nf = os.path.join(root,newsitename + '.html')

newfile = open(nf,'w')
newfile.write('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"\n')
newfile.write('"http://www.w3.org/TR/html4/loose.dtd">\n')
newfile.write('<html>\n')
newfile.write('<head>\n')
newfile.write('<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">\n')
newfile.write('<meta http-equiv="pragma" content="no-cache">\n')
newfile.write('<!-- This page was generated by Omega Web SiteBuilder\n')
newfile.write('Cisco Network Building Mediator  &copy; 2005-2011\n')
newfile.write('$Name: mediator_3_1_2_branch $\n')
newfile.write('$Id: save.psp 20479 2011-05-19 14:07:22Z bisarkar $ -->\n')
newfile.write('<title>O M E G A  ::: [ Richards | Zeta ]</title>\n')
newfile.write('<style type="text/css">\n')
newfile.write('#activehardware {\n')
newfile.write('width:250px;\n')
newfile.write('height:60px;\n')
newfile.write('float:right;\n')
newfile.write('}\n')
newfile.write('#activehardware IFRAME {\n')
newfile.write('width:250px;\n')
newfile.write('height:50px;\n')
newfile.write('float:right;\n')
newfile.write('}\n')
newfile.write('#activehardware TABLE {\n')
newfile.write('width: 100%;\n')
newfile.write('height: 100%;\n')
newfile.write('}\n')
newfile.write('#activehardware TH {\n')
newfile.write('font: 8px verdana, tahoma, arial;\n')
newfile.write('font-weight: bold;\n')
newfile.write('background-color:#dcdcdc;\n')
newfile.write('color:#000000;\n')
newfile.write('padding-left: 0px;\n')
newfile.write('height: 10px;\n')
newfile.write('}\n')
newfile.write('#activehardware TD {\n')
newfile.write('font: 10px verdana, tahoma, arial;\n')
newfile.write('background-color: %s;\n' % bgcolor)
newfile.write('color:#000000;\n')
newfile.write('padding-left: 0px;\n')
newfile.write('padding-right: 0px;\n')
newfile.write('padding-top: 0px;\n')
newfile.write('padding-bottom: 0px;\n')
newfile.write('height: 50px;\n')
newfile.write('}\n')
newfile.write('.navbtnoff {\n')
newfile.write('border-right: transparent 0px;\n')
newfile.write('border-top: transparent 0px;\n')
newfile.write('padding-left: 0px;\n')
newfile.write('padding-bottom: 0px;\n')
newfile.write('margin: 0px;\n')
newfile.write('border-left: transparent 0px;\n')
newfile.write('cursor: pointer;\n')
newfile.write('border-bottom: transparent 0px;\n')
newfile.write('vertical-align: middle;\n')
newfile.write('text-align: center;\n')
newfile.write('padding-top: 6px;\n')
newfile.write('background-repeat: no-repeat;\n')
if m.has_key('btnoff'):
    btnoff = m['btnoff'].value
else:
    psp.write('Form did not have correct button OFF element<br>')
    exit()
newfile.write('background-image: url(%s);\n' % btnoff)
newfile.write('height: 25px;\n')
newfile.write('width: 110px;\n')
newfile.write('top: 0px;\n')
newfile.write('left: 0px;\n')
newfile.write('font-weight: bold;\n')
newfile.write('font-size: 10px;\n')
newfile.write('color: %s;\n' % fontcolor)
newfile.write('font-family: %s;\n' % fontfamily)
newfile.write('}\n')
newfile.write('.navbtnon {\n')
newfile.write('border-right: transparent 0px;\n')
newfile.write('border-top: transparent 0px;\n')
newfile.write('padding-left: 0px;\n')
newfile.write('padding-bottom: 0px;\n')
newfile.write('margin: 0px;\n')
newfile.write('border-left: transparent 0px;\n')
newfile.write('cursor: pointer;\n')
newfile.write('border-bottom: transparent 0px;\n')
newfile.write('vertical-align: middle;\n')
newfile.write('text-align: center;\n')
newfile.write('padding-top: 6px;\n')
newfile.write('background-repeat: no-repeat;\n')
if m.has_key('btnon'):
    btnon = m['btnon'].value
else:
    psp.write('Form did not have correct button ON element<br>')
    exit()
newfile.write('background-image: url(%s);\n' % btnon)
newfile.write('height: 25px;\n')
newfile.write('width: 110px;\n')
newfile.write('top: 0px;\n')
newfile.write('left: 0px;\n')
newfile.write('font-weight: bold;\n')
newfile.write('font-size: 10px;\n')
newfile.write('color: %s;\n' % fontcolor)
newfile.write('font-family: %s;\n' % fontfamily)
newfile.write('}\n')
newfile.write('</style>\n')
newfile.write('<script language="JavaScript" type="text/JavaScript">\n')
newfile.write('var timestamp = (new Date()).valueOf();\n')
newfile.write('function mmLoadMenus() {\n')
indices = xrange(sys.maxint)

def generateMenu(menulevel, menuname, menuid, menupath, menuitems):
    newfile.write('// generateMenu(' + str(menulevel) + ', ' + menuname + ', ' + menuid + ', ' + menupath + ', len(menuitems)=' + str(len(menuitems)) + '\n')
    thisMenu = []
    maxlablen = 0
    if len(menuitems) > 0:
        itemcount = 1
        submenucount = 0
        if isinstance(menuitems, list):
            for item, index in zip(menuitems, indices):
                temp = item.split(':')
                level = temp[0]
                href = temp[1]
                title = temp[2]
                newtitle = title.replace(' ','&nbsp;')
                mytarget = temp[3]
                newfile.write('//  %s %s %s %s %s\n' % (index, level, href, title, mytarget))
                if level == str(menulevel):
                    if mytarget == 'menu':
                        submenucount += 1
                        thisMenu.append('mm_menu_%s.addMenuItem(mm_menu_%s_%s);\n' % (menuid, menuid, submenucount))
                        itemcount += 1
                        retList = generateMenu(menulevel + 1, newtitle, menuid + '_'+ str(submenucount), menupath + '|' + newtitle, menuitems[index + 1:])
                        if retList is not None:
                            if isinstance(retList, list):
                                thisMenu[0:0] = retList
                            else:
                                thisMenu.insert(0, retList)
                    elif mytarget == 'frame':
                        if len(href) == 0:
                            thisMenu.append('mm_menu_%s.addMenuItem("%s");\n' % (menuid, newtitle))
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            thisMenu.append('mm_menu_%s.addMenuItem("%s","loadIFrame(\'%s\',\'%s|%s\')");\n' % (menuid, newtitle, href, menupath, newtitle))
                        else:
                            thisMenu.append('mm_menu_%s.addMenuItem("%s","loadIFrame(\'/%s\',\'%s|%s\')");\n' % (menuid, newtitle, href, menupath, newtitle))
                        itemcount += 1
                    elif mytarget == 'window':
                        if len(href) == 0:
                            thisMenu.append('mm_menu_%s.addMenuItem("%s");\n' % (menuid, newtitle))
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            thisMenu.append('mm_menu_%s.addMenuItem("%s","window.location=\'%s\';");\n' % (menuid, newtitle, href))
                        else:
                            thisMenu.append('mm_menu_%s.addMenuItem("%s","window.location=\'/%s\';");\n' % (menuid, newtitle, href))
                        itemcount += 1
                    else: # new window
                        if len(href) == 0:
                            thisMenu.append('mm_menu_%s.addMenuItem("%s");\n' % (menuid, newtitle))
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            thisMenu.append('mm_menu_%s.addMenuItem("%s","openNewWin(\'%s_\' + timestamp,\'%s\')");\n' % (menuid, newtitle, menuid, href))
                        else:
                            thisMenu.append('mm_menu_%s.addMenuItem("%s","openNewWin(\'%s_\' + timestamp,\'/%s\')");\n' % (menuid, newtitle, menuid, href))
                        itemcount += 1
                elif level > str(menulevel):
                    continue
                else:
                    break
            thisMenu.append('mm_menu_%s.hideOnMouseOut=true;\n' % menuid)
            if submenucount:
                thisMenu.append('mm_menu_%s.childMenuIcon="/webapi/images/arrows.gif";\n' % menuid)
                itemcount += 1
            thisMenu.append('mm_menu_%s.bgColor="#555555";\n' % menuid)
            itemcount += 1
            thisMenu.append('mm_menu_%s.menuBorder=1;\n' % menuid)
            itemcount += 1
            thisMenu.append('mm_menu_%s.menuLiteBgColor="#FFFFFF";\n' % menuid)
            itemcount += 1
            thisMenu.append('mm_menu_%s.menuBorderBgColor="#777777";\n' % menuid)
            itemcount += 1
            thisMenu.insert(len(thisMenu) - itemcount,'window.mm_menu_%s = new Menu("%s",84,18,"Verdana,sans-serif",10,"#000000","#FFFFFF","#CCCCCC","#000084","left","middle",3,0,1000,-5,7,true,true,true,0,true,true);\n' % (menuid, menuname))
            return thisMenu
    else:
        itemcount = 1
        newfile.write('//  no children case\n')
        thisMenu.append('window.mm_menu_%s = new Menu("%s",84,18,"Verdana,sans-serif",10,"#000000","#FFFFFF","#CCCCCC","#000084","left","middle",3,0,1000,-5,7,true,true,true,0,true,true);\n' % (menuid, menuname))
        thisMenu.append('mm_menu_%s.hideOnMouseOut=true;\n' % menuid)
        thisMenu.append('mm_menu_%s.bgColor="#555555";\n' % menuid)
        thisMenu.append('mm_menu_%s.menuBorder=1;\n' % menuid)
        thisMenu.append('mm_menu_%s.menuLiteBgColor="#FFFFFF";\n' % menuid)
        thisMenu.append('mm_menu_%s.menuBorderBgColor="#777777";\n' % menuid)
        return thisMenu

try:
    if m.has_key('numbuttons'):
        numbuttons = m['numbuttons'].value
        newfile.write('//  numbuttons=%s\n' % numbuttons)
        if int(numbuttons) > 0:
            if m.has_key('assigned'):
                count = 0
                lastcount = 0
                writeList = []
                if isinstance(m['assigned'], list):
                    for x in m['assigned']:
                        count += 1
                        temp = x.value.split('|')
                        href = temp[0]
                        title = temp[1]
                        mytarget = temp[2]
                        if mytarget == 'menu':
                            if len(href) > 0:
                                newhref = href.split(';')
                            else:
                                newhref = ''
                            newtitle = title.replace(' ','&nbsp;')
                            newfile.write('// before generateMenu(), list\n')
                            retList = generateMenu(1, 'root', '091414141' + str(count) + '_0', newtitle, newhref)
                            lastcount = count
                            if retList is not None:
                                if isinstance(retList, list):
                                    writeList.extend(retList)
                                else:
                                    writeList.append(retList)
    
                else:
                    assignedvalue = m['assigned'].value
                    if len(assignedvalue) > 0:
                        temp = assignedvalue.split('|')
                        href = temp[0]
                        title = temp[1]
                        newtitle = title.replace(' ','&nbsp;')
                        mytarget = temp[2]
                        if mytarget == 'menu':
                            if len(href) > 0:
                                newhref = href.split(';')
                            else:
                                newhref = ''
                            newfile.write('// before generateMenu(), no list\n')
                            retList = generateMenu(1, 'root', '0914141411_0', newtitle, newhref)
                            lastcount = 1
                            if retList is not None:
                                if isinstance(retList, list):
                                    writeList.extend(retList)
                                else:
                                    writeList.append(retList)
                if lastcount > 0:
                    if writeList is not None:
                        newfile.write('if(window.mm_menu_%s) return;\n' % (writeList[0][15:writeList[0].index(' ')]))
                        for x in writeList:
                            newfile.write(x)
                        newfile.write('mm_menu_091414141' + str(lastcount) + '_0.writeMenus();\n')
except:
    newfile.write('// EXCEPTION during menu generation\n')

newfile.write('} // mmLoadMenus()\n')
newfile.write('var IFRAMENAME = "";\n')
newfile.write('var bgcolor = "%s";' % bgcolor)
newfile.write('var fontfamily = "%s";' % fontfamily)
newfile.write('var fontcolor = "%s";' % fontcolor)
mfile = m['mainframe'].value
if mfile == '':
    mfile = "/home_main.html"
newfile.write("""\
function startIFrame(){
  var iFrameHolder = document.getElementById("contentholder");
  var childFrame = document.createElement("iframe");
  IFRAMENAME = "contentframe";
  childFrame.setAttribute("id",IFRAMENAME);
  childFrame.setAttribute("name",IFRAMENAME);
  childFrame.src = "/omega/sitebuilder/sitebuilderframe.htm?bgcolor=" +
                   encodeURIComponent(bgcolor) + "&fontfamily=" +
                   encodeURIComponent(fontfamily) + "&fontcolor=" +
                   encodeURIComponent(fontcolor) + "&selection=" +
                   encodeURIComponent("%s") + "&selectionpath=" +
                   encodeURIComponent("Home");
  childFrame.width = "1";
  childFrame.height = "1";
  childFrame.marginWidth = "0";
  childFrame.marginHeight = "0";
  childFrame.frameBorder = "0";
  childFrame.scrolling = "no";
  iFrameHolder.appendChild(childFrame);
  window.setTimeout("startIFrameFinish();",1); //fixes IE appendChild() race
}
""" % mfile)
newfile.write("""\
function startIFrameFinish() {
  windowResize();
}
""")
newfile.write("""\
function loadIFrame(newurl,path) {
  var newsrc = "/omega/sitebuilder/sitebuilderframe.htm?bgcolor=" +
               encodeURIComponent(bgcolor) + "&fontfamily=" +
               encodeURIComponent(fontfamily) + "&fontcolor=" +
               encodeURIComponent(fontcolor) + "&selection=" +
               encodeURIComponent(newurl) + "&selectionpath=" +
               encodeURIComponent(path);
  var myFrame = document.getElementById(IFRAMENAME);
  myFrame.src = newsrc;
  myFrame.width = 1;
  myFrame.height = 1;
  myFrame.src = newsrc;
  window.setTimeout("startIFrameFinish();",1);
}
""")
newfile.write('function setNavigationBtnOff(evt) {\n')
newfile.write('evt = (evt) ? evt : ((event) ? event : null);\n')
newfile.write('var elem = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);\n')
newfile.write('elem.className = "navbtnoff";\n')
newfile.write('}\n')
newfile.write('function setNavigationBtnOn(evt) {\n')
newfile.write('evt = (evt) ? evt : ((event) ? event : null);\n')
newfile.write('var elem = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);\n')
newfile.write('elem.className = "navbtnon";\n')
newfile.write('}\n')
newfile.write('function setWindowSize() {\n')
newfile.write('return\n')
#newfile.write('if(screen.availWidth < 1024 || screen.availHeight < 768) {\n')
#newfile.write('window.resizeTo(800, 600);\n')
#newfile.write('}\n')
#newfile.write('else {\n')
#newfile.write('window.resizeTo(1024, 768);\n')
#newfile.write('}\n')
newfile.write('}\n')
newfile.write("""\
function openNewWin(winname,newurl){
  var openNewWinRef = null;
  var w = "800";
  var h = "600";
  var height = window.screen.availHeight;
  var width = window.screen.availWidth;
  var left_point = parseInt(width/2) - parseInt(w/2);
  var top_point =  parseInt(height/2) - parseInt(h/2);
  openNewWinRef = window.open(newurl,winname,'width='+w+',height='+h+
                              ',left='+left_point+',top='+top_point);
  openNewWinRef.focus();
}
""")
newfile.write("""\
function windowResize() {
  var iframe = document.getElementById(IFRAMENAME);
  var window_height = document.body.parentNode.clientHeight;
  var window_width = document.body.parentNode.clientWidth;
  var newHeight = window_height - (
    document.getElementById("headerrow").offsetHeight +
    document.getElementById("copyrightrow").offsetHeight + 4
    );
  var newWidth = window_width - 1;
  iframe.height = newHeight;
  iframe.width = newWidth;
  var editWin = document.getElementById(IFRAMENAME).contentWindow;
  var editDoc = document.getElementById(IFRAMENAME).contentWindow.document;
  if(editDoc.getElementById(IFRAMENAME)) {
    editWin.adjustIFrame(IFRAMENAME);
  }
}
window.onresize = windowResize;
""")
newfile.write('</script>\n')
newfile.write('<script language="JavaScript" src="/webapi/js/rz_menu.js"></script>\n')
newfile.write('</head>\n')
newfile.write('<body marginheight="0" marginwidth="0" leftmargin="0" topmargin="0" bgColor="%s" onload="setWindowSize(); startIFrame()">\n' % bgcolor)
newfile.write('<script language="JavaScript1.2">mmLoadMenus();</script>\n')
newfile.write('<table width="100%" border="0" cellspacing="0" cellpadding="0">\n')
newfile.write('<tr id="headerrow">\n')
newfile.write('<td><table width="772" border="0" cellspacing="0" cellpadding="0">\n')
newfile.write('<tr>\n')
newfile.write('<td><table width="100%" border="0" cellspacing="0" cellpadding="0">\n')
newfile.write('<tr>\n')
lfile = m['logo'].value
lwidth = m['logowidth'].value
lheight = m['logoheight'].value
bfile = m['banner'].value
bwidth = m['bannerwidth'].value
bheight = m['bannerheight'].value
newfile.write('<td align="left" valign="top"><img name="logo" src="%s" width="%s" height="%s" alt=""></td>\n' % (lfile, lwidth, lheight))
newfile.write('<td align="center" valign="top"><img name="banner" src="%s" width="%s" height="%s" alt=""></td>\n' % (bfile, bwidth, bheight))
newfile.write('<td align="right" valign="top"><div id="activehardware">\n')
newfile.write('<table border="0" cellpadding="0" cellspacing="0">\n')
newfile.write('<tr align="center"><th>Active Hardware</th></tr>\n')
newfile.write('<tr align="left">\n')
hflag = m['hostname'].value
iflag = m['ipaddress'].value
lflag = m['location'].value
newfile.write('<script language="JavaScript1.2">\n')
newfile.write('document.write("<td><iframe src=\'/webapi/psp/mediatorname.psp?bgcolor=" + encodeURIComponent(\'%s\') + "&fontfamily=" + encodeURIComponent(\'%s\') + "&fontcolor=" + encodeURIComponent(\'%s\') +  "&hostname=" + encodeURIComponent(\'%s\') + "&ipaddress=" + encodeURIComponent(\'%s\') + "&location=" + encodeURIComponent(\'%s\') + "\' name=\'nameframe\' marginwidth=\'0\' marginheight=\'0\' scrolling=\'no\' frameborder=\'0\'></iframe>");\n' % (bgcolor, fontfamily, fontcolor, hflag, iflag, lflag))
newfile.write('</script>\n')
newfile.write('</td>\n')
newfile.write('</tr>\n')
newfile.write('</table>\n')
newfile.write('</div></td>\n')
newfile.write('</tr>\n')
newfile.write('</table></td>\n')
newfile.write('</tr>\n')
newfile.write('<tr>\n')
newfile.write('<td><table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">\n')
newfile.write('<tr>\n')
newfile.write('<td><table width="772" border="0" cellpadding="0" cellspacing="0">\n')
newfile.write('<tr><td><img src="/webapi/images/spacer.gif" width="1" height="8" alt="" border="0"></td></tr>\n')
if m.has_key('numbuttons'):
    numbuttons = m['numbuttons'].value
    if int(numbuttons) > 0:
        if m.has_key('assigned'):
            count = 0
            if isinstance(m['assigned'], list):
                newfile.write('<tr>\n')
                for x in m['assigned']:
                    count += 1
                    newfile.write('<td width="16%" align="center" valign="bottom">\n')
                    temp = x.value.split('|')
                    href = temp[0]
                    title = temp[1]
                    newtitle = title.replace(' ','&nbsp;')
                    mytarget = temp[2]
                    if mytarget == 'menu':
                        newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onClick="MM_showMenu(window.mm_menu_091414141%s_0,0,32,null,\'btn_user%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event); MM_startTimeout();"> %s </div></td>\n' % (count, count, count, count, newtitle))
                    elif mytarget == 'frame':
                        if len(href) == 0:
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, newtitle))
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onClick="loadIFrame(\'%s\',\'%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, href, newtitle, newtitle))
                        else:
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onClick="loadIFrame(\'/%s\',\'%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, href, newtitle, newtitle))
                    elif mytarget == 'window':
                        if len(href) == 0:
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, newtitle))
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onClick="window.location=\'%s\'" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, href, newtitle))
                        else:
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onClick="window.location=\'/%s\'" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, href, newtitle))
                    else: #load to new window
                        if len(href) == 0:
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, newtitle))
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onClick="openNewWin(\'btn_user%s\',\'%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, count, href, newtitle))
                        else:
                            newfile.write('<div id="btn_user%s" name="btn_user%s" class="navbtnoff" onClick="openNewWin(\'btn_user%s\',\'/%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (count, count, count, href, newtitle))
                while count < 6:
                    newfile.write('<td width="16%" align="center" valign="bottom">\n')
                    newfile.write('<span></span></td>\n')
                    count += 1
                newfile.write('</tr>\n')
            else:
                assignedvalue = m['assigned'].value
                if len(assignedvalue) > 0:
                    #if assignedvalue is not None and len(assignedvalue) > 0:
                    newfile.write('<tr>\n')
                    newfile.write('<td width="16%" align="center" valign="bottom">\n')
                    temp = m['assigned'].value.split('|')
                    href = temp[0]
                    title = temp[1]
                    newtitle = title.replace(' ','&nbsp;')
                    mytarget = temp[2]
                    if mytarget == 'menu':
                        newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onClick="MM_showMenu(window.mm_menu_0914141411_0,0,32,null,\'btn_user1\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event); MM_startTimeout();"> %s </div></td>\n' % newtitle)
                    elif mytarget == 'frame':
                        if len(href) == 0:
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % newtitle)
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onClick="loadIFrame(\'%s\',\'%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (href, newtitle, newtitle))
                        else:
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onClick="loadIFrame(\'/%s\',\'%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (href, newtitle, newtitle))
                    elif mytarget == 'window':
                        if len(href) == 0:
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % newtitle)
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onClick="window.location=\'%s\'" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (href, newtitle))
                        else:
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onClick="window.location=\'/%s\'" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (href, newtitle))
                    else: #load to new window
                        if len(href) == 0:
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % newtitle)
                        elif href[0:5] == 'http:' or href[0:6] == 'https:':
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onClick="openNewWin(\'btn_user1\',\'%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (href, newtitle))
                        else:
                            newfile.write('<div id="btn_user1" name="btn_user1" class="navbtnoff" onClick="openNewWin(\'btn_user1\',\'/%s\')" onMouseOver="setNavigationBtnOn(event)" onMouseOut="setNavigationBtnOff(event)"> %s </div></td>\n' % (href, newtitle))
                    newfile.write('<td width="16%" align="center" valign="bottom">\n')
                    newfile.write('<span></span></td>\n')
                    newfile.write('<td width="16%" align="center" valign="bottom">\n')
                    newfile.write('<span></span></td>\n')
                    newfile.write('<td width="16%" align="center" valign="bottom">\n')
                    newfile.write('<span></span></td>\n')
                    newfile.write('<td width="16%" align="center" valign="bottom">\n')
                    newfile.write('<span></span></td>\n')
                    newfile.write('<td width="16%" align="center" valign="bottom">\n')
                    newfile.write('<span></span></td>\n')
                    newfile.write('</tr>\n')
newfile.write('</table></td>\n')
newfile.write('</tr>\n')
newfile.write('</table></td>\n')
newfile.write('</tr>\n')
newfile.write('</table></td>\n')
newfile.write('</tr>\n')
newfile.write('<tr>\n')
newfile.write('<td width="100%"><div id="content" align="left">\n')
newfile.write('<div id="contentholder"></div>\n')
newfile.write('</div></td>\n')
newfile.write('</tr>\n')
newfile.write('<tr id="copyrightrow">\n')
if bgcolor.upper() == '#000000' or bgcolor.upper() == '#006699' or bgcolor.upper() == '#0C6285':
    newfile.write('<td width="100%" align="left" style="background-color:#FFFFFF"><img src="/omega/media/images/sb_footer772x28.gif" width="772" height="28"></td>\n')
else:
    newfile.write('<td width="100%" align="left"><img src="/omega/media/images/sb_footer772x28.gif" width="772" height="28"></td>\n')
newfile.write('</tr>\n')
newfile.write('</table>\n')
newfile.write('</body>\n')
newfile.write('</html>\n')
newfile.close()
rzutils.wefs_cache(nf)

%>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>O M E G A  ::: [ Richards | Zeta ] - Web SiteBuilder</title>
<script src="../includes/js/global.js" type="text/javascript"></script>
<script language="JavaScript" src="/webapi/js/sdk2.js"></script>
<link rel="stylesheet" href="../includes/css/global.css">
</head>
<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0">
<div align="left" style="height:400px; width:585px; background-color:#ffffff">
<span class="PageTitle">Saving a Site Page</span>
<div class="line-dotted"><img border="0" src="../media/images/pxl.gif" width="1" height="1" alt=""></div>
Your site page has been successfully saved.  Click the view button below to view your page, click the edit button to modify your page, or click the continue button to return to the Web SiteBuilder menu.<br><br>
<div align="center">
<a href="javascript:WebExpress_FileOpsView()"><img src="../media/images/btn_view.gif" width="181" height="23" alt="" border="0"></a><br><br>
<a href="javascript:WebExpress_FileOpsEdit()"><img src="../media/images/btn_edit.gif" width="181" height="23" alt="" border="0"></a><br><br>
<a href="javascript:WebExpress_Reload();"><img border="0" src="../media/images/btn_sitebuilder_continue.gif" width="181" height="23" alt="" align="center" vspace="3"></a>
</div>
</div>
<script language="JavaScript">
function WebExpress_FileOpsEdit(){
var myDate = new Date();
<%
psp.write('top.loadIFrame("/omega/sitebuilder/index.psp?showallfiles=false&file=%s.wdx&cachekiller=" + myDate.valueOf());' % (newsitename))
%>
}
function WebExpress_FileOpsView() {
var myDate = new Date();
<%
psp.write('var myURL = window.location.protocol + "//" + window.location.host + "/" + "%s" + ".html?cachekiller=" + myDate.valueOf();' % newsitename)
psp.write('var win = window.open(myURL,"WebSiteBuilderView_%s");' % newsitename)
%>
}
function WebExpress_Reload() {
var myDate = new Date();
top.location = "/omega/sitebuilder/index.html?cachekiller=" + myDate.valueOf();
}
</script>
</body>
</html>
