/*
Purpose: Generic MultiColorStatusOverlay widget for WebExpress
$Name: mediator_3_1_2_branch $
$Id: GenericColorStatusOverlay.wjs 20101 2011-03-06 16:02:15Z bhagn $
*/
function GenericColorStatusOverlay(){
  this.base = Widget;
  this.base();
  this._name = 'GenericColorStatusOverlay';
  this._z_index = '1000';
  this._node = '';
  this.node_selector_node = 'true';
  this._status_box_width = '20px';
  this._status_box_height = '20px';
  this._level_trigger = 'rising';
  this._color_opacity = '50';
  this._normal_color = 'transparent';
  this.color_selector_normal_color = 'true';
  this._warning = 'off';
  this._warning_threshold = '';
  this._warning_color = 'yellow';
  this.color_selector_warning_color= 'true';
  this._warning1 = 'off';
  this._warning1_threshold = '';
  this._warning1_color = 'yellow';
  this._warning2 = 'off';
  this._warning2_threshold = '';
  this._warning2_color = 'yellow';
  this._warning3 = 'off';
  this._warning3_threshold = '';
  this._warning3_color = 'yellow';
  this._warning4 = 'off';
  this._warning4_threshold = '';
  this._warning4_color = 'yellow';
  this._warning5 = 'off';
  this._warning5_threshold = '';
  this._warning5_color = 'yellow';
  this.color_selector_warning1_color= 'true';
  this.color_selector_warning2_color= 'true';
  this.color_selector_warning3_color= 'true';
  this.color_selector_warning4_color= 'true';
  this.color_selector_warning5_color= 'true';
  this._alarm = 'off';
  this._alarm_threshold = '';
  this._alarm_color = 'red';
  this.color_selector_alarm_color= 'true';
}

GenericColorStatusOverlay.prototype = new Widget;

GenericColorStatusOverlay.prototype.after_config_table = function() {
  Widget_log('GenericColorStatusOverlay.after_config_table(), at top');
  document.getElementById('GenericColorStatusOverlay_level_trigger').value = this._level_trigger;
  document.getElementById('GenericColorStatusOverlay_warning').value = this._warning;
  document.getElementById('GenericColorStatusOverlay_warning1').value = this._warning1;
  document.getElementById('GenericColorStatusOverlay_warning2').value = this._warning2;
  document.getElementById('GenericColorStatusOverlay_warning3').value = this._warning3;
  document.getElementById('GenericColorStatusOverlay_warning4').value = this._warning4;
  document.getElementById('GenericColorStatusOverlay_warning5').value = this._warning5;
  document.getElementById('GenericColorStatusOverlay_alarm').value = this._alarm;
}

GenericColorStatusOverlay.prototype.get_level_trigger_defaults = function() {
  var s = document.createElement('select');

  s.setAttribute('id', 'GenericColorStatusOverlay_level_trigger');

  var o = document.createElement('option');

  o.value = 'rising';
  o.innerHTML = 'rising';
  s.appendChild(o);
  o = null;
  o =  document.createElement('option');
  o.value = 'falling';
  o.innerHTML = 'falling';
  s.appendChild(o);
  return s;
}

GenericColorStatusOverlay.prototype.get_warning_defaults = function() {
  var s = document.createElement('select');

  s.setAttribute('id', 'GenericColorStatusOverlay_warning');

  var o = document.createElement('option');

  o.value = 'on';
  o.innerHTML = 'on';
  s.appendChild(o);
  o = null;
  o =  document.createElement('option');
  o.value = 'off';
  o.innerHTML = 'off';
  s.appendChild(o);
  return s;
}

GenericColorStatusOverlay.prototype.get_warning1_defaults = function() {
  var s = document.createElement('select');

  s.setAttribute('id', 'GenericColorStatusOverlay_warning1');

  var o = document.createElement('option');

  o.value = 'on';
  o.innerHTML = 'on';
  s.appendChild(o);
  o = null;
  o =  document.createElement('option');
  o.value = 'off';
  o.innerHTML = 'off';
  s.appendChild(o);
  return s;
}

GenericColorStatusOverlay.prototype.get_warning2_defaults = function() {
  var s = document.createElement('select');

  s.setAttribute('id', 'GenericColorStatusOverlay_warning2');

  var o = document.createElement('option');

  o.value = 'on';
  o.innerHTML = 'on';
  s.appendChild(o);
  o = null;
  o =  document.createElement('option');
  o.value = 'off';
  o.innerHTML = 'off';
  s.appendChild(o);
  return s;
}

GenericColorStatusOverlay.prototype.get_warning3_defaults = function() {
  var s = document.createElement('select');

  s.setAttribute('id', 'GenericColorStatusOverlay_warning3');

  var o = document.createElement('option');

  o.value = 'on';
  o.innerHTML = 'on';
  s.appendChild(o);
  o = null;
  o =  document.createElement('option');
  o.value = 'off';
  o.innerHTML = 'off';
  s.appendChild(o);
  return s;
}

GenericColorStatusOverlay.prototype.get_warning4_defaults = function() {
  var s = document.createElement('select');

  s.setAttribute('id', 'GenericColorStatusOverlay_warning4');

  var o = document.createElement('option');

  o.value = 'on';
  o.innerHTML = 'on';
  s.appendChild(o);
  o = null;
  o =  document.createElement('option');
  o.value = 'off';
  o.innerHTML = 'off';
  s.appendChild(o);
  return s;
}

GenericColorStatusOverlay.prototype.get_warning5_defaults = function() {
  var s = document.createElement('select');

  s.setAttribute('id', 'GenericColorStatusOverlay_warning5');

  var o = document.createElement('option');

  o.value = 'on';
  o.innerHTML = 'on';
  s.appendChild(o);
  o = null;
  o =  document.createElement('option');
  o.value = 'off';
  o.innerHTML = 'off';
  s.appendChild(o);
  return s;
}

GenericColorStatusOverlay.prototype.get_alarm_defaults = function() {
  var s = document.createElement('select');

  s.setAttribute('id', 'GenericColorStatusOverlay_alarm');

  var o = document.createElement('option');

  o.value = 'on';
  o.innerHTML = 'on';
  s.appendChild(o);
  o = null;
  o =  document.createElement('option');
  o.value = 'off';
  o.innerHTML = 'off';
  s.appendChild(o);
  return s;
}

GenericColorStatusOverlay.prototype.init = function(element) {
  Widget_log('GenericColorStatusOverlay.init(), at top');
  this._name = 'GenericColorStatusOverlay';
  this._z_index = element.getAttribute('zindex');

  var placeholderdiv = this.get_element(element,'div','placeholder');
  this._node = placeholderdiv.getAttribute('node');

  var infospan = this.get_element(element,'div','info');
  this._status_box_width = infospan.getAttribute('status_box_width');
  this._status_box_height = infospan.getAttribute('status_box_height');
  this._level_trigger = infospan.getAttribute('level_trigger');
  this._color_opacity = infospan.getAttribute('color_opacity');
  this._normal_color = infospan.getAttribute('normal_color');
  this._warning = infospan.getAttribute('warning');
  this._warning_threshold = infospan.getAttribute('warning_threshold');
  this._warning_color = infospan.getAttribute('warning_color');
  this._warning1 = infospan.getAttribute('warning1');
  this._warning1_threshold = infospan.getAttribute('warning1_threshold');
  this._warning1_color = infospan.getAttribute('warning1_color'); 
  this._warning2 = infospan.getAttribute('warning2');
  this._warning2_threshold = infospan.getAttribute('warning2_threshold');
  this._warning2_color = infospan.getAttribute('warning2_color'); 
  this._warning3 = infospan.getAttribute('warning3');
  this._warning3_threshold = infospan.getAttribute('warning3_threshold');
  this._warning3_color = infospan.getAttribute('warning3_color'); 
  this._warning4 = infospan.getAttribute('warning4');
  this._warning4_threshold = infospan.getAttribute('warning4_threshold');
  this._warning4_color = infospan.getAttribute('warning4_color'); 
  this._warning5 = infospan.getAttribute('warning5');
  this._warning5_threshold = infospan.getAttribute('warning5_threshold');
  this._warning5_color = infospan.getAttribute('warning5_color');
  this._alarm = infospan.getAttribute('alarm');
  this._alarm_threshold = infospan.getAttribute('alarm_threshold');
  this._alarm_color = infospan.getAttribute('alarm_color');
}

GenericColorStatusOverlay.prototype.init_element = function (){
  Widget_log('GenericColorStatusOverlay.init_element(), at top');
  this.element = null;
  this.element = document.createElement('div');
  this.element.setAttribute('widget', this._name);
  this.element.setAttribute('version', '1_0_dev_2');
  this.element.setAttribute('zindex', this._z_index);
  this.element.setAttribute('overflow', 'visible');
  this.element.style.position = 'absolute';
  this.element.style.fontSize = 'xx-small';
  this.element.style.zIndex = this._z_index;

  var innercontainer = document.createElement('div');
  innercontainer.setAttribute('element','innercontainer');
  innercontainer.style.position = 'relative';
  innercontainer.style.verticalAlign = 'middle';
  innercontainer.style.height = 'auto';
  innercontainer.style.width = 'auto';
  innercontainer.style.backgroundColor = 'transparent';
  innercontainer.style.top = '0';
  innercontainer.style.left = '0';
  innercontainer.style.zIndex = '0';

  var infospan = document.createElement('div');
  infospan.setAttribute('element','info');
  infospan.setAttribute('status_box_width', this._status_box_width);  
  infospan.setAttribute('status_box_height', this._status_box_height);  
  infospan.setAttribute('level_trigger', this._level_trigger);
  infospan.setAttribute('color_opacity', this._color_opacity);
  infospan.setAttribute('normal_color', this._normal_color);
  infospan.setAttribute('warning', this._warning);
  infospan.setAttribute('warning_threshold', this._warning_threshold);
  infospan.setAttribute('warning_color', this._warning_color);
  infospan.setAttribute('warning1', this._warning1);
  infospan.setAttribute('warning1_threshold', this._warning1_threshold);
  infospan.setAttribute('warning1_color', this._warning1_color);
  infospan.setAttribute('warning2', this._warning2);
  infospan.setAttribute('warning2_threshold', this._warning2_threshold);
  infospan.setAttribute('warning2_color', this._warning2_color); 
  infospan.setAttribute('warning3', this._warning3);
  infospan.setAttribute('warning3_threshold', this._warning3_threshold);
  infospan.setAttribute('warning3_color', this._warning3_color);  
  infospan.setAttribute('warning4', this._warning4);
  infospan.setAttribute('warning4_threshold', this._warning4_threshold);
  infospan.setAttribute('warning4_color', this._warning4_color);  
  infospan.setAttribute('warning5', this._warning5);
  infospan.setAttribute('warning5_threshold', this._warning5_threshold);
  infospan.setAttribute('warning5_color', this._warning5_color); 
  infospan.setAttribute('alarm', this._alarm);
  infospan.setAttribute('alarm_threshold', this._alarm_threshold);
  infospan.setAttribute('alarm_color', this._alarm_color);
  //infospan.style.position = 'relative';
  infospan.style.backgroundColor = 'transparent';
  infospan.style.top = '0';
  infospan.style.left = '0';
  infospan.style.height = '1';
  infospan.style.width = '1';
  infospan.style.zIndex = '0';
  infospan.style.visibility = 'hidden';
  infospan.style.display = 'none';
   
  innercontainer.appendChild(infospan);

  var placeholderdiv = document.createElement('div');
  placeholderdiv.setAttribute('element', 'placeholder');
  placeholderdiv.setAttribute('node', this._node);
  placeholderdiv.setAttribute('display_function', 'GenericColorStatusOverlayDisplay');
  //placeholderdiv.style.position = 'absolute';
  if(this._normal_color != '') {
    placeholderdiv.style.backgroundColor = this._normal_color;
  }
  if(this._status_box_width != '') {
  	placeholderdiv.style.width = this._status_box_width;
  }
  if(this._status_box_height != '') {
  	placeholderdiv.style.height = this._status_box_height;
  }
  placeholderdiv.style.filter = 'progid:DXImageTransform.Microsoft.Alpha(Opacity=' + this._color_opacity + ')';
  placeholderdiv.style.MozOpacity = this._color_opacity / 100;
  placeholderdiv.style.top = '0';
  placeholderdiv.style.left = '0';
  placeholderdiv.style.zIndex = '1';
  innercontainer.appendChild(placeholderdiv);
  
  this.element.appendChild(innercontainer);
}


GenericColorStatusOverlay.prototype.create = function (){
  Widget_log('GenericColorStatusOverlay.create(), at top');
  //_msglog('GenericColorStatusOverlay.create(), arguments.length=' + arguments.length);
  if(arguments.length == 1) {
    this.element = element;
    this.init(element);
  }
  this.init_element();
}

function GenericColorStatusOverlay_factory(){
  return new GenericColorStatusOverlay();
}

function GenericColorStatusOverlayDisplayNoErrors(v) {
  try {    
    var pattern1 = /\?/;      
    var pattern2 = /error\:/;      
    if (pattern1.exec(v.toString()) == null && pattern2.exec(v.toString()) == null) {
      return 1;
    }
  }
  catch(err) {
    return 0;
  }
  return 0;
}

function GenericColorStatusOverlayDisplay(e,v){
  Widget_log('GenericColorStatusOverlayDisplay(), e.element=' + e.getAttribute('element') + ', v=' + v);
  if(GenericColorStatusOverlayDisplayNoErrors(v)){
    //Widget_log('GenericColorStatusOverlayDisplay(), e.parentNode.nodeType=' + e.parentNode.nodeType);
    //Widget_log('GenericColorStatusOverlayDisplay(), e.parentNode.element=' + e.parentNode.getAttribute('element'));
    var celement = e.parentNode;
    var ielement = GenericColorStatusOverlayGetElement(celement,'div','info');

    var myColor = ielement.getAttribute('normal_color');
    var myValue = parseInt(v);
    if(ielement.getAttribute('level_trigger') == 'rising') {
      Widget_log('level_trigger == rising');
      if(ielement.getAttribute('warning') == 'on') {
        Widget_log('warning == on');
        myWarningThreshold = ielement.getAttribute('warning_threshold');
        if(myWarningThreshold != '' && isNaN(myWarningThreshold) == false && myValue >= parseInt(myWarningThreshold)) {
          Widget_log('setting warning_color');
          myColor = ielement.getAttribute('warning_color');
        }
      }
	  if(ielement.getAttribute('warning1') == 'on') {
        Widget_log('warning1 == on');
        mywarningThreshold = ielement.getAttribute('warning1_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue >= parseInt(mywarningThreshold)) {
          Widget_log('setting warning1_color');
          myColor = ielement.getAttribute('warning1_color');
        }
      }
	  if(ielement.getAttribute('warning2') == 'on') {
        Widget_log('warning2 == on');
        mywarningThreshold = ielement.getAttribute('warning2_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue >= parseInt(mywarningThreshold)) {
          Widget_log('setting warning2_color');
          myColor = ielement.getAttribute('warning2_color');
        }
      }
	  if(ielement.getAttribute('warning3') == 'on') {
        Widget_log('warning3 == on');
        mywarningThreshold = ielement.getAttribute('warning3_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue >= parseInt(mywarningThreshold)) {
          Widget_log('setting warning3_color');
          myColor = ielement.getAttribute('warning3_color');
        }
      } 
	  if(ielement.getAttribute('warning4') == 'on') {
        Widget_log('warning4 == on');
        mywarningThreshold = ielement.getAttribute('warning4_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue >= parseInt(mywarningThreshold)) {
          Widget_log('setting warning4_color');
          myColor = ielement.getAttribute('warning4_color');
        }
      }  
	  if(ielement.getAttribute('warning5') == 'on') {
        Widget_log('warning5 == on');
        mywarningThreshold = ielement.getAttribute('warning5_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue >= parseInt(mywarningThreshold)) {
          Widget_log('setting warning5_color');
          myColor = ielement.getAttribute('warning5_color');
        }
      } 
      if(ielement.getAttribute('alarm') == 'on') {
        Widget_log('alarm == on');
        myWarningThreshold = ielement.getAttribute('alarm_threshold');
        if(myWarningThreshold != '' && isNaN(myWarningThreshold) == false && myValue >= parseInt(myWarningThreshold)) {
          Widget_log('setting alarm_color');
          myColor = ielement.getAttribute('alarm_color');
        }
      }
    }
    else { // falling
      Widget_log('level_trigger == falling');
      if(ielement.getAttribute('warning') == 'on') {
        Widget_log('setting warning_color');
        myWarningThreshold = ielement.getAttribute('warning_threshold');
        if(myWarningThreshold != '' && isNaN(myWarningThreshold) == false && myValue <= parseInt(myWarningThreshold)) {
          Widget_log('setting warning_color');
          myColor = ielement.getAttribute('warning_color');
        }
      }
	  if(ielement.getAttribute('warning1') == 'on') {
        Widget_log('setting warning1_color');
        mywarningThreshold = ielement.getAttribute('warning1_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue <= parseInt(mywarningThreshold)) {
          Widget_log('setting warning1_color');
          myColor = ielement.getAttribute('warning1_color');
        }
      }  
	  if(ielement.getAttribute('warning2') == 'on') {
        Widget_log('setting warning2_color');
        mywarningThreshold = ielement.getAttribute('warning2_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue <= parseInt(mywarningThreshold)) {
          Widget_log('setting warning2_color');
          myColor = ielement.getAttribute('warning2_color');
        }
      } 
	  if(ielement.getAttribute('warning3') == 'on') {
        Widget_log('setting warning3_color');
        mywarningThreshold = ielement.getAttribute('warning3_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue <= parseInt(mywarningThreshold)) {
          Widget_log('setting warning3_color');
          myColor = ielement.getAttribute('warning3_color');
        }
      }
	  if(ielement.getAttribute('warning4') == 'on') {
        Widget_log('setting warning4_color');
        mywarningThreshold = ielement.getAttribute('warning4_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue <= parseInt(mywarningThreshold)) {
          Widget_log('setting warning4_color');
          myColor = ielement.getAttribute('warning4_color');
        }
      }
	  if(ielement.getAttribute('warning5') == 'on') {
        Widget_log('setting warning5_color');
        mywarningThreshold = ielement.getAttribute('warning5_threshold');
        if(mywarningThreshold != '' && isNaN(mywarningThreshold) == false && myValue <= parseInt(mywarningThreshold)) {
          Widget_log('setting warning5_color');
          myColor = ielement.getAttribute('warning5_color');
        }
      }
      if(ielement.getAttribute('alarm') == 'on') {
        Widget_log('alarm == on');
        myWarningThreshold = ielement.getAttribute('alarm_threshold');
        if(myWarningThreshold != '' && isNaN(myWarningThreshold) == false && myValue <= parseInt(myWarningThreshold)) {
          Widget_log('setting alarm_color');
          myColor = ielement.getAttribute('alarm_color');
        }
      }
    }
    e.style.backgroundColor = myColor;
    e.style.MozOpacity = ielement.getAttribute('color_opacity') / 100;
    e.style.visibility = 'visible';
  }
  else{ //offline
    e.style.visibility = 'hidden';
  }
}

function GenericColorStatusOverlayGetElement(element,t,element_name){
  var index;
  var e = null;
  var elements = element.getElementsByTagName(t);
  for (index=0;index<elements.length;index++){
    if (elements[index].getAttribute('element') &&
        elements[index].getAttribute('element') == element_name){ 
      e = elements[index];
      break;
    }
  }
  return e
}

var GenericColorStatusOverlay_loaded = true;
