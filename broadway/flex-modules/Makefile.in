#=---------------------------------------------------------------------------
# Makefile for Envenergy Broadway builds.
#
# @configure_input@
#=---------------------------------------------------------------------------


#=--------------------------------------------------------------------------=#
#=-                DO NOT CHANGE ANYTHING BELOW THIS LINE                  -=#
#=--------------------------------------------------------------------------=#
# NOTE: This section of the makefile is generated by update_makefile.py in   #
#       the root directory of the broadway source tree.  By doing this,      #
#       it is reasonable to keep the almost 200 makefiles in sync with any   #
#       required changes.  To change this section, modify update_makefile.py #
#       and rerun the update_makefiles script.                               #
#=--------------------------------------------------------------------------=#

srcdir = @srcdir@
top_srcdir = @top_srcdir@
include @BUILD_DIR@/Constants.make

WEBTOOLS_CORE_HOME := @srcdir@/lib
export WEBTOOLS_CORE_HOME

deploy_dir := @top_srcdir@/opt/rz/omega/html/omega
#=--------------------------------------------------------------------------=#
#=-                DO NOT CHANGE ANYTHING ABOVE THIS LINE                  -=#
#=--------------------------------------------------------------------------=#


#=---------------------------------------------------------------------------
# Rule: do_makeall
#
#   Required.  Called by the top level makefile via 'Rules.make', or by a
#   call to 'make' in a subdirectory.  Feel free to add other targets here,
#   but you should leave the 'target', 'tools', 'tests' and 'doc' rules.

# STM: Skip the 'doc' rule here, not everyonw has "docutils" installed.
do_makeall: target tools tests


#=---------------------------------------------------------------------------
# Define your 'prelease(-d)' structure.  See 'config/Rules.make' for a
# discussion of these variables.

PRELEASE:=	broadway.core


#=---------------------------------------------------------------------------
# Include the main 'Rules' file where most of the work is done.  This must
# follow the 'do_makeall' rule and PRELEASE_XXX symbols.

include $(RULES_FILE)


#=---------------------------------------------------------------------------
# Use 'TARGETS' to define what you want built.


TARGETS:= BUILD_SWF \
	com.cisco.nbm.entityViewer \
	com.cisco.nbm.globalsetpoints.widget \
	com.cisco.nbm.navigator \
	com.cisco.nbm.schedules.editor

com.cisco.nbm.entityViewer: $(srcdir)/com.cisco.nbm.entityViewer/bin-release/*.swf
	@if [ "$(FLEX_HOME)" != "--disable-build-swf" ] ; \
	then @cp -fp $^ $(deploy_dir)/entityViewer/ >/dev/null ; \
	fi

com.cisco.nbm.globalsetpoints.widget: $(srcdir)/com.cisco.nbm.globalsetpoints.widget/bin-release/*.swf
	@if [ "$(FLEX_HOME)" != "--disable-build-swf" ] ; \
	then @cp -fp $^ $(deploy_dir)/globalSetpoints/ >/dev/null ; \
	fi

com.cisco.nbm.navigator: $(srcdir)/com.cisco.nbm.navigator/bin-release/*.swf
	@if [ "$(FLEX_HOME)" != "--disable-build-swf" ] ; \
	then @cp -fp $^ $(deploy_dir)/entityViewer/ >/dev/null ; \
	fi

com.cisco.nbm.schedules.editor: $(srcdir)/com.cisco.nbm.schedules.editor/bin-release/*.swf
	@if [ "$(FLEX_HOME)" != "--disable-build-swf" ] ; \
	then @cp -fp $^ $(deploy_dir)/scheduleEditor/ >/dev/null ; \
	fi


BUILD_SWF: 
	@if [ "$(FLEX_HOME)" == "--disable-build-swf" ] ; \
	then echo "WARNING: --disable-build-swf, using pre-built SWF files" ; \
	else cd $(srcdir)/lib/com.cisco.app.core && ant >/dev/null ; \
	cd $(srcdir)/lib/com.cisco.nbm.browserBridge && ant >/dev/null ; \
	cd $(srcdir)/lib/com.cisco.nbm.search && ant >/dev/null ; \
	cd $(srcdir)/lib/com.cisco.nbm.xmlrpc.v2 && ant >/dev/null ; \
	cd $(srcdir)/lib/com.cisco.ui.skins.kubrick && ant >/dev/null ; \
	cd $(srcdir)/lib/com.cisco.ui.components && ant >/dev/null ; \
	cd $(srcdir)/lib/com.cisco.nbm.scheduler && ant >/dev/null ; \
	cd $(srcdir)/lib/com.cisco.nbm.globalsetpoints && ant >/dev/null ; \
	cd $(srcdir)/lib/com.cisco.nbm.entities && ant >/dev/null ; \
	cd $(srcdir)/com.cisco.nbm.entityViewer && ant >/dev/null ; \
	cd $(srcdir)/com.cisco.nbm.globalsetpoints.widget && ant >/dev/null ; \
	cd $(srcdir)/com.cisco.nbm.navigator && ant >/dev/null ; \
	cd $(srcdir)/com.cisco.nbm.schedules.editor && ant >/dev/null ; \
	fi

target: $(TARGETS)


#=---------------------------------------------------------------------------
# Use 'DOCUMENTATION' to define documentation that needs to be generated.

DOC:=

doc: $(DOC)


#=---------------------------------------------------------------------------
# Use 'TOOLS' to define utility programs.  Output from this rule will *not*
# be included in a 'prelease(-d)' invocation.

#
# We need the following files to support that wacky nodedef build, but not
# as part of a distribution release tarball.
#
TOOLS:=	

tools: $(TOOLS)


#=---------------------------------------------------------------------------
# Use 'TESTS' to define test programs.  Any programs here will also be
# invoked when 'make unittest' is run.  Output from this rule will *not*
# be included in a 'prelease(-d)' invocation.

TESTS:=

tests: $(TESTS)


#=- EOF --------------------------------------------------------------------=#
