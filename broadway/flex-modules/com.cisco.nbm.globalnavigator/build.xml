<?xml version="1.0"?>
<project name="Global Navigator" default="build" basedir=".">
	<property environment="env" />	
	<property file="../common.properties" />
	<property file="build.properties" />

	<!-- Information for tasks -->
	<taskdef resource="flexTasks.tasks" classpath="${flex.task}" />
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${flex.antcontrib}" />
		</classpath>
	</taskdef>

	<fail>
		<condition>
			<not>
				<isset property="FLEX_HOME" />
			</not>
		</condition>
		Error!
		You need to set FLEX_HOME prperty (path to Flex SDK) in 
        local.properties file located in the same dir as build.xml!
		For example: FLEX_HOME = C:\\flex\\sdk\\
	</fail>	
	
	<!-- dirs -->
	
	<property name="build.dir" location="build/"/>
	<property name="release.build.dir" location="${build.dir}-release/"/>
	<property name="debug.build.dir" location="${build.dir}-debug/"/>
	<property name="src.dir" location="src/"/>
	<property name="flex.config.xml" location="flex-config.xml"/>
	
	<!-- files -->
	<property name="main.application" location="${src.dir}/navigator.mxml"/>
	<property name="output.swf.name" value="navigator"/>
	<property name="main.application.release.out" location="${release.build.dir}/${output.swf.name}.swf"/>
	<property name="main.application.debug.out" location="${debug.build.dir}/${output.swf.name}.swf"/>
	
	<!-- wrapper -->
	<property name="template" value="express-installation" />
	<property name="output.html.name" value="${output.swf.name}.html"/>
	<property name="output.debug.html" location="${debug.build.dir}/${output.html.name}"/>
	<property 
		name="output.release.html" 
		location="${release.build.dir}/${output.html.name}"/>

	<property name="swf.width" value="100%"/>
	<property name="swf.height" value="100%"/>
	<property name="swf.debug.title" value="Global Navigator debug version"/>
	<property name="swf.release.title" value="Global Navigator"/>
	<property name="swf.version.major" value="9"/>
	<property name="swf.version.minor" value="0"/>
	<property name="swf.version.revision" value="0"/>
	<property name="swf.application" value="${output.swf.name}"/>
	<property name="swf.swf" value="${output.swf.name}"/>
	<property name="swf.bgcolor" value="#FFFFFF"/>

    <description>Global Navigator</description>

    <!-- ================================= 
          target: build              
         ================================= -->
    <target 
    	name="build" 
    	depends="clear,
    			init,
    			compile.release,
    			compile.debug,
    			make.release.wrapper,
    			make.debug.wrapper" 
    	description="Globalnavigator">
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: make.release.wrapper
         - - - - - - - - - - - - - - - - - -->
    <target name="make.release.wrapper">
    	<html-wrapper
    		template="${template}"
    		history="true"
    		width="${swf.width}"
    		height="${swf.height}"
    		title="${swf.release.title}"
    		version-major="${swf.version.major}"
    		version-minor="${swf.version.minor}"
    		version-revision="${swf.version.revision}"
    		application="${swf.application}}"
    		swf="${swf.swf}"
    		bgcolor="${swf.bgcolor}"
    		output="${release.build.dir}" />
    	<move 
    		file="${release.build.dir}/index.html"
    		tofile="${output.release.html}" />
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: make.debug.wrapper
         - - - - - - - - - - - - - - - - - -->
    <target name="make.debug.wrapper">
    	<html-wrapper
    		template="${template}"
    		history="true"
    		width="${swf.width}"
    		height="${swf.height}"
    		title="${swf.debug.title}"
    		version-major="${swf.version.major}"
    		version-minor="${swf.version.minor}"
    		version-revision="${swf.version.revision}"
    		application="${swf.application}}"
    		swf="${swf.swf}"
    		bgcolor="${swf.bgcolor}"
    		output="${debug.build.dir}" />
    	<move 
    		file="${debug.build.dir}/index.html"
    		tofile="${output.debug.html}" />
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: compile.release
         - - - - - - - - - - - - - - - - - -->
    <target name="compile.release">
    	<mxmlc 
    		file="${main.application}"
    		output="${main.application.release.out}">
            <include-libraries file="${project.assets}" />
	    <include-libraries file="${project.com.cisco.ui.skins.kubrick.swc}" />
    	</mxmlc>
    </target>
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: compile.debug
         - - - - - - - - - - - - - - - - - -->
    <target name="compile.debug">
    	<mxmlc 
    		debug="true"
    		file="${main.application}"
    		output="${main.application.debug.out}">
            <include-libraries file="${project.assets}" />
	    <include-libraries file="${project.com.cisco.ui.skins.kubrick.swc}" />
    	</mxmlc>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: clear                      
         - - - - - - - - - - - - - - - - - -->
    <target name="clear">
		<delete failonerror="false">
			<fileset dir="${build.dir}" includes="**/*.*" />
		</delete>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
    <target name="init">
    	<mkdir dir="${build.dir}"/>
    	<mkdir dir="${release.build.dir}"/>
    	<mkdir dir="${debug.build.dir}"/>
    </target>
</project>
