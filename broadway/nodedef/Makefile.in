#=---------------------------------------------------------------------------
# Makefile for Envenergy Broadway builds.
#
# @configure_input@
#=---------------------------------------------------------------------------


#=--------------------------------------------------------------------------=#
#=-                DO NOT CHANGE ANYTHING BELOW THIS LINE                  -=#
#=--------------------------------------------------------------------------=#
# NOTE: This section of the makefile is generated by update_makefile.py in   #
#       the root directory of the broadway source tree.  By doing this,      #
#       it is reasonable to keep the almost 200 makefiles in sync with any   #
#       required changes.  To change this section, modify update_makefile.py #
#       and rerun the update_makefiles script.                               #
#=--------------------------------------------------------------------------=#

srcdir = @srcdir@
top_srcdir = @top_srcdir@
include @BUILD_DIR@/Constants.make

#=--------------------------------------------------------------------------=#
#=-                DO NOT CHANGE ANYTHING ABOVE THIS LINE                  -=#
#=--------------------------------------------------------------------------=#


#=---------------------------------------------------------------------------
# Rule: do_makeall
#
#   Required.  Called by the top level makefile via 'Rules.make', or by a
#   call to 'make' in a subdirectory.  Feel free to add other targets here,
#   but you should leave the 'target', 'tools', 'tests' and 'doc' rules.

# STM: Skip the 'doc' rule here, not everyonw has "docutils" installed.
do_makeall: target tools tests


#=---------------------------------------------------------------------------
# Define your 'prelease(-d)' structure.  See 'config/Rules.make' for a
# discussion of these variables.

PRELEASE:=	broadway.nodedefs


#=---------------------------------------------------------------------------
# Include the main 'Rules' file where most of the work is done.  This must
# follow the 'do_makeall' rule and PRELEASE_XXX symbols.

include $(RULES_FILE)


#=---------------------------------------------------------------------------
# Use 'TARGETS' to define what you want built.

BROADWAY_VERSION=$(shell cat $(top_srcdir)/_BROADWAY_FCS)
if [ BROADWAY_VERSION == "" ] ; \
then BROADWAY_VERSION=$(shell cat $(BUILD_DIR)/BROADWAY) ; \
fi

TARGETS:=	broadway.nodedefs.install.$(PYEXT) \
		nodedefs.md5 \
		nodedefs.zip

#
# These files have to be COPIED so we don't touch what's in the source dir.
#
master.data: $(srcdir)/master.data
	@cp -fp $^ . >/dev/null
	@chmod a+w $@

master.properties: $(srcdir)/master.properties
	@cp -fp $^ . >/dev/null
	@chmod a+w $@

master.script: $(srcdir)/master.script
	@cp -fp $^ . >/dev/null
	@chmod a+w $@

nodedefs.xml:	$(BUILD_DIR)/BROADWAY \
		master.data \
		master.properties \
		master.script
	@if [ "$(JAVACMD)" == "--disable-build-nodedefs" ] ; \
	 then echo "WARNING: --disable-build-nodedefs, copying nodedefs.md5 from cvs" ;\
	      cp -fp $(srcdir)/nodedefs.xml . ; \
	 else $(JAVACMD) -jar $(top_srcdir)/buildsup/nodedef_builder.jar \
			 -nodedef_db=./master \
			 -output=$@ \
			 -version=$(BROADWAY_VERSION) >/dev/null; \
	 fi

nodedefs.md5: nodedefs.xml
	@if [ "$(JAVACMD)" == "--disable-build-nodedefs" ] ; \
	 then echo "WARNING: --disable-build-nodedefs, copying nodedefs.md5 from cvs" ; \
	      cp -fp $(srcdir)/nodedefs.md5 . ; \
	 else md5sum $<  | awk '{print $1}' > $@ ; \
	 fi

nodedefs.zip: nodedefs.md5 nodedefs.xml
	@if [ "$(JAVACMD)" == "--disable-build-nodedefs" ] ; \
	 then echo "WARNING: --disable-build-nodedefs, copying nodedefs.zip from cvs" ;\
	      cp -fp $(srcdir)/nodedefs.zip . ; \
	 else zip $@ nodedefs.xml >/dev/null ; \
	 fi

target: $(TARGETS)


#=---------------------------------------------------------------------------
# Use 'DOCUMENTATION' to define documentation that needs to be generated.

DOC:=	NodeDefGuidelines.rst IONEditMenu.png NodeDefinitionEdit.png \
	NodeDefGuidelines.html \
	NodeDefGuidelines.pdf \
	rfc2822.txt rfc3339.txt \
	IEEE_Std_260.1-1993.pdf

doc: $(DOC)

# Not an official target yet...
NodeDefGuidelines.zip: $(DOC)
	zip -9 -u NodeDefGuidelines.zip $(DOC)

#=---------------------------------------------------------------------------
# Use 'TOOLS' to define utility programs.  Output from this rule will *not*
# be included in a 'prelease(-d)' invocation.

#
# We need the following files to support that wacky nodedef build, but not
# as part of a distribution release tarball.
#
TOOLS:=		nodedefs.xml \
		master.data \
		master.properties \
		master.script

tools: $(TOOLS)


#=---------------------------------------------------------------------------
# Use 'TESTS' to define test programs.  Any programs here will also be
# invoked when 'make unittest' is run.  Output from this rule will *not*
# be included in a 'prelease(-d)' invocation.

TESTS:=

tests: $(TESTS)


#=- EOF --------------------------------------------------------------------=#
